{
  "function_code": "def solve():\n    \"\"\"Index: 4662.\n    Returns: how much more money Zach needs to earn before he can buy the bike.\n    \"\"\"\n    # L1\n    babysitting_hours = 2 # babysitting for 2 hours\n    babysitting_rate = 7 # $7 per hour to babysit\n    babysitting_earnings = babysitting_hours * babysitting_rate\n\n    # L2\n    weekly_allowance = 5 # weekly allowance is $5\n    lawn_mowing_pay = 10 # extra $10 to mow the lawn\n    total_earnings_this_week = weekly_allowance + lawn_mowing_pay + babysitting_earnings\n\n    # L3\n    initial_savings = 65 # already saved up $65\n    total_money_after_earnings = total_earnings_this_week + initial_savings\n\n    # L4\n    bike_cost = 100 # bike that costs $100\n    money_needed = bike_cost - total_money_after_earnings\n\n    # FA\n    answer = money_needed\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [],
      "line_number": "L1",
      "output_variable": "babysitting_earnings",
      "question_inputs": ["babysitting_hours", "babysitting_rate"],
      "solution_line_template": "If he babysits for {babysitting_hours} hours at ${babysitting_rate} per hour, he will earn {babysitting_hours}*{babysitting_rate} = $<<{babysitting_hours}*{babysitting_rate}={babysitting_earnings}>>{babysitting_earnings}"
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "total_earnings_this_week",
      "question_inputs": ["weekly_allowance", "lawn_mowing_pay"],
      "solution_line_template": "This week he will earn ${weekly_allowance} allowance, ${lawn_mowing_pay} mowing the lawn and ${babysitting_earnings} from babysitting for a total of {weekly_allowance}+{lawn_mowing_pay}+{babysitting_earnings} = $<<{weekly_allowance}+{lawn_mowing_pay}+{babysitting_earnings}={total_earnings_this_week}>>{total_earnings_this_week}"
    },
    {
      "WK_inputs": [],
      "line_number": "L3",
      "output_variable": "total_money_after_earnings",
      "question_inputs": ["initial_savings"],
      "solution_line_template": "If we add the ${total_earnings_this_week} he will earn to his ${initial_savings} savings, he will have a total of {total_earnings_this_week} + {initial_savings} = $<<{total_earnings_this_week}+{initial_savings}={total_money_after_earnings}>>{total_money_after_earnings}"
    },
    {
      "WK_inputs": [],
      "line_number": "L4",
      "output_variable": "money_needed",
      "question_inputs": ["bike_cost"],
      "solution_line_template": "The bike costs ${bike_cost} and he will have ${total_money_after_earnings} leaving ${bike_cost}-${total_money_after_earnings} = $<<{bike_cost}-{total_money_after_earnings}={money_needed}>>{money_needed} more that he will need to earn"
    }
  ]
}