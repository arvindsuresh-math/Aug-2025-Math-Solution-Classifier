{
  "function_code": "def solve():\n    \"\"\"Index: 340.\n    Returns: the number of pieces of rope Tom needs to buy.\n    \"\"\"\n    # L1\n    feet_per_story = 10 # One story is 10 feet\n    num_stories = 6 # 6 stories\n    total_feet_needed = feet_per_story * num_stories\n\n    # L2\n    rope_length = 20 # The only rope being sold is 20 feet long\n    lashing_loss_fraction = 0.25 # you lose 25% when lashing them together\n    feet_lost_per_rope = rope_length * lashing_loss_fraction\n\n    # L3\n    usable_feet_per_rope = rope_length - feet_lost_per_rope\n\n    # L4\n    num_pieces = total_feet_needed / usable_feet_per_rope\n\n    # FA\n    answer = num_pieces\n    return answer",
  "logical_steps": [
    {
      "line_number": "L1",
      "question_inputs": ["feet_per_story", "num_stories"],
      "WK_inputs": [],
      "output_variable": "total_feet_needed",
      "solution_line_template": "He needs {feet_per_story}*{num_stories}=<<{feet_per_story}*{num_stories}={total_feet_needed}>>{total_feet_needed} feet"
    },
    {
      "line_number": "L2",
      "question_inputs": ["rope_length", "lashing_loss_fraction"],
      "WK_inputs": [],
      "output_variable": "feet_lost_per_rope",
      "solution_line_template": "He loses {rope_length}*{lashing_loss_fraction}=<<{rope_length}*{lashing_loss_fraction}={feet_lost_per_rope}>>{feet_lost_per_rope} feet each time"
    },
    {
      "line_number": "L3",
      "question_inputs": [],
      "WK_inputs": [],
      "output_variable": "usable_feet_per_rope",
      "solution_line_template": "So he gets {rope_length}-{feet_lost_per_rope}=<<{rope_length}-{feet_lost_per_rope}={usable_feet_per_rope}>>{usable_feet_per_rope} feet from each piece"
    },
    {
      "line_number": "L4",
      "question_inputs": [],
      "WK_inputs": [],
      "output_variable": "num_pieces",
      "solution_line_template": "That means he needs {total_feet_needed}/{usable_feet_per_rope}=<<{total_feet_needed}/{usable_feet_per_rope}={num_pieces}>>{num_pieces} pieces of rope"
    }
  ]
}
