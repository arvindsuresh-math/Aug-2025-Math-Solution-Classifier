{
  "function_code": "def solve():\n    \"\"\"Index: 3327.\n    Returns: the total number of gems Tom ended up with.\n    \"\"\"\n    # L1\n    money_spent = 250 # Tom spends $250\n    gems_per_dollar = 100 # 100 gems for each dollar\n    initial_gems = money_spent * gems_per_dollar\n\n    # L2\n    bonus_percent = 0.2 # 20% bonus\n    bonus_gems = initial_gems * bonus_percent\n\n    # L3\n    total_gems = initial_gems + bonus_gems\n\n    # FA\n    answer = total_gems\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [],
      "line_number": "L1",
      "output_variable": "initial_gems",
      "question_inputs": ["money_spent", "gems_per_dollar"],
      "solution_line_template": "He bought {money_spent}*{gems_per_dollar}=<<{money_spent}*{gems_per_dollar}={initial_gems}>>{initial_gems} gems"
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "bonus_gems",
      "question_inputs": ["bonus_percent"],
      "solution_line_template": "He got a {initial_gems}*{bonus_percent}=<<{initial_gems}*{bonus_percent}={bonus_gems}>>{bonus_gems} gem bonus"
    },
    {
      "WK_inputs": [],
      "line_number": "L3",
      "output_variable": "total_gems",
      "question_inputs": [],
      "solution_line_template": "So he got a total of {initial_gems}+{bonus_gems}=<<{initial_gems}+{bonus_gems}={total_gems}>>{total_gems} gems"
    }
  ]
}