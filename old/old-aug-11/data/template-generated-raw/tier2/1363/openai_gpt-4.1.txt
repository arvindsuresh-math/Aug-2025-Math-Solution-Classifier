{
  "function_code": "def solve():\n    \"\"\"Index: 1363.\n    Returns: Prudence's net profit from selling the remaining cupcakes.\n    \"\"\"\n    # L1\n    burnt_batches = 2 # first 2 dozen burnt\n    good_batches = 2 # next 2 came out perfectly\n    evening_batches = 2 # 2 more dozen cupcakes later that day\n    total_batches = burnt_batches + good_batches + evening_batches\n\n    # L2\n    cupcakes_per_dozen = 12 # WK\n    total_cupcakes_made = total_batches * cupcakes_per_dozen\n\n    # L3\n    thrown_batches = burnt_batches # She threw away 2 dozen cupcakes\n    thrown_cupcakes = thrown_batches * cupcakes_per_dozen\n\n    # L4\n    ate_first = 5 # ate 5 cupcakes right away\n    ate_later = 4 # ate 4 more later\n    cupcakes_left = total_cupcakes_made - thrown_cupcakes - ate_first - ate_later\n\n    # L5\n    sale_price_per_cupcake = 2.00 # sells at $2.00 each\n    total_earned = cupcakes_left * sale_price_per_cupcake\n\n    # L6\n    cost_per_cupcake = 0.75 # cost $0.75 to make each\n    total_cost = total_cupcakes_made * cost_per_cupcake\n\n    # L7\n    net_profit = total_earned - total_cost\n\n    # FA\n    answer = net_profit\n    return answer",
  "logical_steps": [
    {
      "line_number": "L1",
      "question_inputs": ["burnt_batches", "good_batches", "evening_batches"],
      "WK_inputs": [],
      "output_variable": "total_batches",
      "solution_line_template": "She burnt {burnt_batches} dozen, cooked {good_batches} dozen and then another {evening_batches} dozen that evening. So she made {burnt_batches}+{good_batches}+{evening_batches} =<<{burnt_batches}+{good_batches}+{evening_batches}={total_batches}>>{total_batches} dozen cupcakes"
    },
    {
      "line_number": "L2",
      "question_inputs": [],
      "WK_inputs": ["cupcakes_per_dozen"],
      "output_variable": "total_cupcakes_made",
      "solution_line_template": "Each dozen makes {cupcakes_per_dozen} cupcakes, so she made {total_batches}*{cupcakes_per_dozen}= <<{total_batches}*{cupcakes_per_dozen}={total_cupcakes_made}>>{total_cupcakes_made} cupcakes"
    },
    {
      "line_number": "L3",
      "question_inputs": [],
      "WK_inputs": [],
      "output_variable": "thrown_cupcakes",
      "solution_line_template": "She threw away {thrown_batches} dozen cupcakes, so {thrown_batches}*{cupcakes_per_dozen} = <<{thrown_batches}*{cupcakes_per_dozen}={thrown_cupcakes}>>{thrown_cupcakes} cupcakes"
    },
    {
      "line_number": "L4",
      "question_inputs": ["ate_first", "ate_later"],
      "WK_inputs": [],
      "output_variable": "cupcakes_left",
      "solution_line_template": "She made {total_cupcakes_made}, threw away {thrown_cupcakes}, ate {ate_first} and then ate another {ate_later} so she had {total_cupcakes_made}-{thrown_cupcakes}-{ate_first}-{ate_later} = <<{total_cupcakes_made}-{thrown_cupcakes}-{ate_first}-{ate_later}={cupcakes_left}>>{cupcakes_left} cupcakes left"
    },
    {
      "line_number": "L5",
      "question_inputs": ["sale_price_per_cupcake"],
      "WK_inputs": [],
      "output_variable": "total_earned",
      "solution_line_template": "She sells the {cupcakes_left} cupcakes at ${sale_price_per_cupcake} each so she earned {cupcakes_left}*{sale_price_per_cupcake} = $<<{cupcakes_left}*{sale_price_per_cupcake}={total_earned}>>{total_earned}"
    },
    {
      "line_number": "L6",
      "question_inputs": ["cost_per_cupcake"],
      "WK_inputs": [],
      "output_variable": "total_cost",
      "solution_line_template": "She made {total_cupcakes_made} cupcakes at a cost of ${cost_per_cupcake} each for a total cost of {total_cupcakes_made}*${cost_per_cupcake} = $<<{total_cupcakes_made}*{cost_per_cupcake}={total_cost}>>{total_cost}"
    },
    {
      "line_number": "L7",
      "question_inputs": [],
      "WK_inputs": [],
      "output_variable": "net_profit",
      "solution_line_template": "If she made ${total_earned} on the remaining cupcakes and it cost her ${total_cost} to make all of the cupcakes then her profit is ${total_earned}-${total_cost} = $<<{total_earned}-{total_cost}={net_profit}>>{net_profit}"
    }
  ]
}
