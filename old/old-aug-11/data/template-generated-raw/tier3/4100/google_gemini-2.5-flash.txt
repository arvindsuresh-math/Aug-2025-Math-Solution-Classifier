{
  "function_code": "def solve():\n    \"\"\"Index: 4100.\n    Returns: the distance in miles between consecutive checkpoints.\n    \"\"\"\n    # L1\n    total_marathon_length = 26 # A 26-mile circular marathon\n    distance_from_start = 1 # The first is one mile from the start line\n    distance_from_finish = 1 # and the last checkpoint is one mile from the finish line\n    effective_spacing_length = total_marathon_length - distance_from_start - distance_from_finish\n\n    # L2\n    num_checkpoints = 4 # has four checkpoints\n    distance_between_checkpoints = effective_spacing_length / num_checkpoints\n\n    # FA\n    answer = distance_between_checkpoints\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [],
      "line_number": "L1",
      "output_variable": "effective_spacing_length",
      "question_inputs": [
        "total_marathon_length",
        "distance_from_start",
        "distance_from_finish"
      ],
      "solution_line_template": "The checkpoints are {distance_from_start} mile from the start and finish, so they are spaced along {total_marathon_length} - {distance_from_start} - {distance_from_finish} = <<{total_marathon_length}-{distance_from_start}-{distance_from_finish}={effective_spacing_length}>>{effective_spacing_length} miles."
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "distance_between_checkpoints",
      "question_inputs": [
        "num_checkpoints"
      ],
      "solution_line_template": "There are {num_checkpoints} equally spaced checkpoints, so the checkpoints are {effective_spacing_length} / {num_checkpoints} = <<{effective_spacing_length}/{num_checkpoints}={distance_between_checkpoints}>>{distance_between_checkpoints} miles apart."
    }
  ]
}