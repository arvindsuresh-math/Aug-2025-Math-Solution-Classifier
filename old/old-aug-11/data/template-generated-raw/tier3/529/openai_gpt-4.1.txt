{
  "function_code": "def solve():\n    \"\"\"Index: 529.\n    Returns: the minimum number of rides needed so the 30-day pass is strictly cheaper per ride.\n    \"\"\"\n    # L2\n    pass_cost = 50 # 30-day pass costs $50\n    one_way_cost = 2 # one-way ticket costs $2\n    rides_equal_cost = pass_cost / one_way_cost\n\n    # L3\n    minimum_rides = int(rides_equal_cost) + 1\n\n    # FA\n    answer = minimum_rides\n    return answer",
  "logical_steps": [
    {
      "line_number": "L2",
      "question_inputs": ["pass_cost", "one_way_cost"],
      "WK_inputs": [],
      "output_variable": "rides_equal_cost",
      "solution_line_template": "If the 30-day pass costs ${pass_cost}, then I should take at least ${pass_cost}/${one_way_cost}=<<{pass_cost}/{one_way_cost}={rides_equal_cost}>>{rides_equal_cost} rides to pay the same as a one-way ticket"
    },
    {
      "line_number": "L3",
      "question_inputs": [],
      "WK_inputs": [],
      "output_variable": "minimum_rides",
      "solution_line_template": "However, given that we want the 30-day pass per ride to be strictly cheaper we should ride at least {rides_equal_cost}+1={minimum_rides} times"
    }
  ]
}
