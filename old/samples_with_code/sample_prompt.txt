### Guidelines

1.  **Function Naming & Docstring:** The function must be named `solve`. It must begin with a docstring that has exactly two lines:
    *   The first line must be: "Code for Q [Index] from the GSM8K dataset (train).", using the index from the task header.
    *   The second line must be a succinct, one-sentence description of what the function returns (e.g., "Returns the total cost of wages and taxes.").

2.  **Function Arguments:** The function arguments must be derived from the 'Question' text. Create a distinct argument for every numerical value that is directly stated in the text.

3.  **Argument Formatting:** Each argument must include a type-hint (e.g., `int`, `float`) and a default value equal to its value in the 'Question'. You must also add a comment (`#`) next to each argument that quotes or describes the phrase in the 'Question' it comes from.

4.  **Function Body:** The body of the function should follow the logic of the provided 'Solution'. Each relevant line from the 'Solution' that involves a computation must be included as a comment, immediately followed by the Python code that formalizes that step.

5.  **Calculator Annotations:** Pay close attention to the calculator annotations (e.g., `<<25*8=200>>`) in the 'Solution' as they reveal the precise mathematical operations to implement.

6.  **Final Answer Comment:** Before the final `return` statement, you must add a comment identifying the variable that holds the final answer (e.g., `# The final answer is the grand total`).
--- EXAMPLES ---

*Index*: 
310

*Question*: 
Janet hires six employees. Four of them are warehouse workers who make $15/hour, and the other two are managers who make $20/hour. Janet has to pay 10% of her workers' salaries in FICA taxes. If everyone works 25 days a month and 8 hours a day, how much does Janet owe total for their wages and taxes for one month?

*Solution*: 
First figure out how many hours each worker works per month by multiplying the number of days they work by the number of hours a day they work: 25 days * 8 hours/day = <<25*8=200>>200 hours
Then calculate how much one warehouse worker makes per month by multiplying their hourly rate by the number of hours they work: 200 hours * $15/hour = $<<200*15=3000>>3000
Then multiply that number by 4 to find out how much all the warehouse workers make: $3000/worker * 4 workers = $<<3000*4=12000>>12,000
Now multiply the hours each manager works (also 200) by their hourly wage to find out how much one manager makes per month: 200 hours * $20/hour = $<<200*20=4000>>4,000
Now multiply one manager's wages by the number of managers (2) to find their total wage amount: $4,000/manager * 2 managers = $<<4000*2=8000>>8,000
Now add the wages for the managers and the workers to find the total cost of the wages: $8,000 + $12,000 = $<<8000+12000=20000>>20,000
Now multiply the total wage bill by 10% to find how much the FICA taxes are: $20,000 * .1 = $<<20000*.1=2000>>2,000
Now add the total wage bill to the total tax amount to find the grand total: $2,000 + $20,000 = $<<2000+20000=22000>>22,000
#### 22000

*Code*:

```python
def solve(
        num_employees: int = 6, # Janet hires six employees
        num_warehouse_workers: int = 4, # four of them are warehouse workers
        num_managers: int = 2, # the other two are managers
        hourly_wage_warehouse: int = 15, # warehouse workers make $15/hour
        hourly_wage_manager: int = 20, # managers make $20/hour
        fica_tax_rate: float = 0.1, # FICA tax rate is 10%
        days_per_month: int = 25, # each worker works 25 days a month
        hours_per_day: int = 8 # each worker works 8 hours a day
    ):
    """Code for Q 310 from the GSM8K dataset (train).
    Returns the monthly total wage bill, including FICA taxes.
    """
    # First figure out how many hours each worker works per month by multiplying the number of days they work by the number of hours a day they work: 25 days * 8 hours/day = <<25*8=200>>200 hours
    hours_per_month = days_per_month * hours_per_day

    # Then calculate how much one warehouse worker makes per month by multiplying their hourly rate by the number of hours they work: 200 hours * $15/hour = $<<200*15=3000>>3000
    monthly_wage_warehouse = hourly_wage_warehouse * hours_per_month

    # Then multiply that number by 4 to find out how much all the warehouse workers make: $3000/worker * 4 workers = $<<3000*4=12000>>12,000
    total_wage_warehouse = monthly_wage_warehouse * num_warehouse_workers

    # Now multiply the hours each manager works (also 200) by their hourly wage to find out how much one manager makes per month: 200 hours * $20/hour = $<<200*20=4000>>4,000
    monthly_wage_manager = hourly_wage_manager * hours_per_month

    # Now multiply one manager's wages by the number of managers (2) to find their total wage amount: $4,000/manager * 2 managers = $<<4000*2=8000>>8,000
    total_wage_manager = monthly_wage_manager * num_managers

    # Now add the wages for the managers and the workers to find the total cost of the wages: $8,000 + $12,000 = $<<8000+12000=20000>>20,000
    total_wages = total_wage_warehouse + total_wage_manager

    # Now multiply the total wage bill by 10% to find how much the FICA taxes are: $20,000 * .1 = $<<20000*.1=2000>>2,000
    fica_taxes = total_wages * fica_tax_rate

    # Now add the total wage bill to the total tax amount to find the grand total: $20,000 + $2,000 = $<<20000+2000=22000>>22,000
    grand_total = total_wages + fica_taxes

    # The final answer is the grand total
    return grand_total

```

*Index*: 
3822

*Question*: 
Alec is running for Class President. He thinks that if he can get three-quarters of the class to vote for him then there is no chance anyone else can beat him. Half of the class have already said they will vote for him but out of the remaining students, only 5 have said they are thinking about voting for him. He surveys the students who are thinking about voting for someone else, and changes his flyers to reflect the issues these students are concerned about. This results in a fifth of these students saying they'll vote for him. If Alec's class has 60 students and everyone who said they will vote for him does so, how many more votes does Alec need to reach his goal number of votes?

*Solution*: 
To calculate Alec's goal number of votes, we need to know that 60 students / 4 = <<60/4=15>>15 students is equal to one-quarter of the class students.
Alec's goal is therefore 15 students * 3 quarters = <<15*3=45>>45 votes.
Half of the class said they will vote for him, so there are already 60 students / 2 = <<60/2=30>>30 votes.
Another 5 students are thinking about voting for him which leaves a total so far of 30 + 5 = <<30+5=35>>35 votes.
This means there are 60 students - 35 voting for Alec = <<60-35=25>>25 students not voting for Alec.
A fifth of these decided to vote, so this is a further 25 students / 5 = <<25/5=5>>5 votes.
Alec is therefore receiving a total of 35 + 5 = <<35+5=40>>40 votes.
So he has missed his goal by 45 goal votes - 40 actual votes = <<45-40=5>>5 votes.
#### 5

*Code*:

```python
def solve(
        fraction_needed_to_win: float = 3/4,  # Alec needs three-quarters of the class to vote for him
        fraction_voting_for_him: float = 1/2,  # Half of the class has already said they will vote for him
        students_thinking_about_it: int = 5,  # Number of students thinking about voting for him
        total_students: int = 60  # Total number of students in Alec's class
):    
    """Code for Q 3822 from the GSM8K dataset (train).
    Returns the number of votes by which Alec is short of his goal.
    """
    # To calculate Alec's goal number of votes, we need to know that 60 students / 4 = <<60/4=15>>15 students is equal to one-quarter of the class students.
    students_per_quarter = total_students / 4

    # Alec's goal is therefore 15 students * 3 quarters = <<15*3=45>>45 votes.
    votes_needed = students_per_quarter * 3

    # Half of the class said they will vote for him, so there are already 60 students / 2 = <<60/2=30>>30 votes.
    votes_for_him = total_students * fraction_voting_for_him

    # Another 5 students are thinking about voting for him which leaves a total so far of 30 + 5 = <<30+5=35>>35 votes.
    votes_so_far = votes_for_him + students_thinking_about_it

    # This means there are 60 students - 35 voting for Alec = <<60-35=25>>25 students not voting for Alec.
    students_not_voting_for_him = total_students - votes_so_far
    
    # A fifth of these say they will vote for him, so this is a further 25 students / 5 = <<25/5=5>>5 votes.
    new_votes = students_not_voting_for_him / 5

    # Alec is therefore receiving a total of 35 + 5 = <<35+5=40>>40 votes.
    total_votes_for_him = votes_so_far + new_votes

    # So he has missed his goal by 45 goal votes - 40 actual votes = <<45-40=5>>5 votes.
    votes_short_of_goal = votes_needed - total_votes_for_him

    # The final answer is the number of students Alec is short of his goal
    return votes_short_of_goal

```

--- TASK ---
*Index*: 
5

*Question*: 
Mark has a garden with flowers. He planted plants of three different colors in it. Ten of them are yellow, and there are 80% more of those in purple. There are only 25% as many green flowers as there are yellow and purple flowers. How many flowers does Mark have in his garden?

*Solution*: 
There are 80/100 * 10 = <<80/100*10=8>>8 more purple flowers than yellow flowers.
So in Mark's garden, there are 10 + 8 = <<10+8=18>>18 purple flowers.
Purple and yellow flowers sum up to 10 + 18 = <<10+18=28>>28 flowers.
That means in Mark's garden there are 25/100 * 28 = <<25/100*28=7>>7 green flowers.
So in total Mark has 28 + 7 = <<28+7=35>>35 plants in his garden.
#### 35

*Code*:

