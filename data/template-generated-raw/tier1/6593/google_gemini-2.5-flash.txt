{
  "function_code": "def solve():\n    \"\"\"Index: 6593.\n    Returns: the total number of passengers that would fill up 3 trains.\n    \"\"\"\n    # L1\n    initial_seats_per_carriage = 25 # each carriage has 25 seats\n    additional_seats_per_carriage = 10 # accommodate 10 more passengers\n    new_seats_per_carriage = initial_seats_per_carriage + additional_seats_per_carriage\n\n    # L2\n    carriages_per_train = 4 # 4 carriages in a train\n    seats_per_train = new_seats_per_carriage * carriages_per_train\n\n    # L3\n    num_trains = 3 # 3 trains\n    total_passengers = num_trains * seats_per_train\n\n    # FA\n    answer = total_passengers\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [],
      "line_number": "L1",
      "output_variable": "new_seats_per_carriage",
      "question_inputs": [
        "initial_seats_per_carriage",
        "additional_seats_per_carriage"
      ],
      "solution_line_template": "If each carriage had another {additional_seats_per_carriage} seats, each carriage would have {initial_seats_per_carriage} + {additional_seats_per_carriage} = {new_seats_per_carriage} seats."
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "seats_per_train",
      "question_inputs": [
        "carriages_per_train"
      ],
      "solution_line_template": "The train comprises of {carriages_per_train} carriages and each carriage now has {new_seats_per_carriage} seats; therefore a train has {new_seats_per_carriage} x {carriages_per_train} = <<{carriages_per_train}*{new_seats_per_carriage}={seats_per_train}>>{seats_per_train} seats."
    },
    {
      "WK_inputs": [],
      "line_number": "L3",
      "output_variable": "total_passengers",
      "question_inputs": [
        "num_trains"
      ],
      "solution_line_template": "{num_trains} trains with {seats_per_train} seats each in total can take up {num_trains} x {seats_per_train} = <<{num_trains}*{seats_per_train}={total_passengers}>>{total_passengers} passengers."
    }
  ]
}