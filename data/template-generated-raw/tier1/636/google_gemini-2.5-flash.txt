```json
{
  "function_code": "def solve():\n    \"\"\"Index: 636.\n    Returns: the total minutes needed to clean remaining keys and finish the assignment.\n    \"\"\"\n    # L1\n    remaining_keys_to_clean = 14 # After Tina has cleaned one key, there are 14 left to clean.\n    time_per_key = 3 # times it to take 3 minutes to clean one.\n    time_to_clean_keys = remaining_keys_to_clean * time_per_key\n\n    # L2\n    assignment_time = 10 # her assignment will only take 10 minutes to complete.\n    total_time_needed = time_to_clean_keys + assignment_time\n\n    # FA\n    answer = total_time_needed\n    return answer",
  "logical_steps": [
    {
      "line_number": "L1",
      "question_inputs": ["remaining_keys_to_clean", "time_per_key"],
      "WK_inputs": [],
      "output_variable": "time_to_clean_keys",
      "solution_line_template": "Tina has already cleaned one key so she has {remaining_keys_to_clean} left which take {time_per_key} minutes each to clean, {remaining_keys_to_clean} x {time_per_key} = <<{remaining_keys_to_clean}*{time_per_key}={time_to_clean_keys}>>{time_to_clean_keys} minutes to clean all the keyboard keys."
    },
    {
      "line_number": "L2",
      "question_inputs": ["assignment_time"],
      "WK_inputs": [],
      "output_variable": "total_time_needed",
      "solution_line_template": "Her assignment will take {assignment_time} minutes to complete, so she needs {time_to_clean_keys} minutes + {assignment_time} minutes = <<{time_to_clean_keys}+{assignment_time}={total_time_needed}>>{total_time_needed} minutes total before dinner."
    }
  ]
}
```