{
  "function_code": "def solve():\n    \"\"\"Index: 1023.\n    Returns: the total number of bricks Cooper needs to complete his fence.\n    \"\"\"\n    # L1\n    rows_per_wall = 5 # 5 bricks high\n    bricks_per_row = 20 # 20 bricks long\n    single_layer_bricks = rows_per_wall * bricks_per_row\n\n    # L2\n    wall_thickness = 2 # 2 bricks deep\n    bricks_per_wall = single_layer_bricks * wall_thickness\n\n    # L3\n    num_walls = 4 # four walls\n    total_bricks = bricks_per_wall * num_walls\n\n    # FA\n    answer = total_bricks\n    return answer",
  "logical_steps": [
    {
      "line_number": "L1",
      "question_inputs": ["rows_per_wall", "bricks_per_row"],
      "WK_inputs": [],
      "output_variable": "single_layer_bricks",
      "solution_line_template": "A single layer of each wall requires {rows_per_wall} rows * {bricks_per_row} bricks per row = <<{rows_per_wall}*{bricks_per_row}={single_layer_bricks}>>{single_layer_bricks} bricks."
    },
    {
      "line_number": "L2",
      "question_inputs": ["wall_thickness"],
      "WK_inputs": [],
      "output_variable": "bricks_per_wall",
      "solution_line_template": "As each wall has a thickness of {wall_thickness} bricks, he will need {single_layer_bricks} bricks * {wall_thickness} = <<{single_layer_bricks}*{wall_thickness}={bricks_per_wall}>>{bricks_per_wall} bricks per wall."
    },
    {
      "line_number": "L3",
      "question_inputs": ["num_walls"],
      "WK_inputs": [],
      "output_variable": "total_bricks",
      "solution_line_template": "If the complete fence contains four walls, he will require a total of {bricks_per_wall}*{num_walls}=<<{bricks_per_wall}*{num_walls}={total_bricks}>>{total_bricks} bricks."
    }
  ]
}