```json
{
  "function_code": "def solve():\n    \"\"\"Index: 1151.\n    Returns: the total number of fried chicken pieces Pau will have eaten.\n    \"\"\"\n    # L1\n    kobe_chicken_pieces = 5 # Kobe ordered five pieces of fried chicken\n    pau_order_multiplier = 2 # Pau ordered twice as much fried chicken as Kobe did\n    pau_initial_order = kobe_chicken_pieces * pau_order_multiplier\n\n    # L2\n    additional_set_factor = 2 # order another set of fried chicken\n    pau_total_eaten = pau_initial_order * additional_set_factor\n\n    # FA\n    answer = pau_total_eaten\n    return answer",
  "logical_steps": [
    {
      "line_number": "L1",
      "question_inputs": ["kobe_chicken_pieces", "pau_order_multiplier"],
      "WK_inputs": [],
      "output_variable": "pau_initial_order",
      "solution_line_template": "Pau ordered {kobe_chicken_pieces} x {pau_order_multiplier} = <<{kobe_chicken_pieces}*{pau_order_multiplier}={pau_initial_order}>>{pau_initial_order} fried chickens in total."
    },
    {
      "line_number": "L2",
      "question_inputs": ["additional_set_factor"],
      "WK_inputs": [],
      "output_variable": "pau_total_eaten",
      "solution_line_template": "Therefore, Pau ate {pau_initial_order} x {additional_set_factor} = <<{pau_initial_order}*{additional_set_factor}={pau_total_eaten}>>{pau_total_eaten} pieces of fried chicken."
    }
  ]
}
```