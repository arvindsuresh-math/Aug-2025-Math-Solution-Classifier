{
  "function_code": "def solve():\n    \"\"\"Index: 1393.\n    Returns: the number of jars of jam Cassy will have left when all the boxes are full.\n    \"\"\"\n    # L1\n    jars_per_box_1 = 12 # packs 12 jars of jam in 10 boxes\n    num_boxes_1 = 10 # 10 boxes\n    packed_1 = jars_per_box_1 * num_boxes_1\n\n    # L2\n    jars_per_box_2 = 10 # packs 10 jars of jam in 30 boxes\n    num_boxes_2 = 30 # 30 boxes\n    packed_2 = jars_per_box_2 * num_boxes_2\n\n    # L3\n    total_packed = packed_2 + packed_1\n\n    # L4\n    total_jars = 500 # she has 500 jars of jams\n    jars_left = total_jars - total_packed\n\n    # FA\n    answer = jars_left\n    return answer",
  "logical_steps": [
    {
      "line_number": "L1",
      "question_inputs": ["jars_per_box_1", "num_boxes_1"],
      "WK_inputs": [],
      "output_variable": "packed_1",
      "solution_line_template": "Cassy can pack {jars_per_box_1} x {num_boxes_1} = <<{jars_per_box_1}*{num_boxes_1}={packed_1}>>{packed_1} jars of jam in the {num_boxes_1} boxes."
    },
    {
      "line_number": "L2",
      "question_inputs": ["jars_per_box_2", "num_boxes_2"],
      "WK_inputs": [],
      "output_variable": "packed_2",
      "solution_line_template": "She can also pack {jars_per_box_2} x {num_boxes_2} = <<{jars_per_box_2}*{num_boxes_2}={packed_2}>>{packed_2} jars of jam in the {num_boxes_2} boxes."
    },
    {
      "line_number": "L3",
      "question_inputs": [],
      "WK_inputs": [],
      "output_variable": "total_packed",
      "solution_line_template": "A total of {packed_2} + {packed_1} = <<{packed_2}+{packed_1}={total_packed}>>{total_packed} jars of jam can be packed in the boxes."
    },
    {
      "line_number": "L4",
      "question_inputs": ["total_jars"],
      "WK_inputs": [],
      "output_variable": "jars_left",
      "solution_line_template": "So, {total_jars} - {total_packed} = <<{total_jars}-{total_packed}={jars_left}>>{jars_left} jars of jam will be left unpacked."
    }
  ]
}