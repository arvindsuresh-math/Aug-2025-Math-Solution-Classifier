```json
{
  "function_code": "def solve():\n    \"\"\"Index: 2948.\n    Returns: the total number of legos needed to build the pyramid.\n    \"\"\"\n    # L1\n    bottom_level_side_legos = 7 # bottom level has 7 legos per side\n    bottom_layer_total_legos = bottom_level_side_legos * bottom_level_side_legos\n\n    # L2\n    lego_reduction_per_level = 1 # each level has one less lego per side\n    second_level_side_legos = bottom_level_side_legos - lego_reduction_per_level\n\n    # L3\n    second_layer_total_legos = second_level_side_legos * second_level_side_legos\n\n    # L4\n    top_level_side_legos = second_level_side_legos - lego_reduction_per_level\n\n    # L5\n    top_layer_total_legos = top_level_side_legos * top_level_side_legos\n\n    # L6\n    total_legos_needed = bottom_layer_total_legos + second_layer_total_legos + top_layer_total_legos\n\n    # FA\n    answer = total_legos_needed\n    return answer",
  "logical_steps": [
    {
      "line_number": "L1",
      "question_inputs": ["bottom_level_side_legos"],
      "WK_inputs": [],
      "output_variable": "bottom_layer_total_legos",
      "solution_line_template": "First find the total number of legos on the bottom layer: {bottom_level_side_legos} legos * {bottom_level_side_legos} legos = <<{bottom_level_side_legos}*{bottom_level_side_legos}={bottom_layer_total_legos}>>{bottom_layer_total_legos} legos"
    },
    {
      "line_number": "L2",
      "question_inputs": ["lego_reduction_per_level"],
      "WK_inputs": [],
      "output_variable": "second_level_side_legos",
      "solution_line_template": "Then find the number of legos per side on the next layer: {bottom_level_side_legos} legos - {lego_reduction_per_level} lego = <<{bottom_level_side_legos}-{lego_reduction_per_level}={second_level_side_legos}>>{second_level_side_legos} legos"
    },
    {
      "line_number": "L3",
      "question_inputs": [],
      "WK_inputs": [],
      "output_variable": "second_layer_total_legos",
      "solution_line_template": "Then find the total number of legos on the second level: {second_level_side_legos} legos * {second_level_side_legos} legos = <<{second_level_side_legos}*{second_level_side_legos}={second_layer_total_legos}>>{second_layer_total_legos} legos"
    },
    {
      "line_number": "L4",
      "question_inputs": [],
      "WK_inputs": [],
      "output_variable": "top_level_side_legos",
      "solution_line_template": "Then find the number of legos per side on the top level: {second_level_side_legos} legos - {lego_reduction_per_level} lego = <<{second_level_side_legos}-{lego_reduction_per_level}={top_level_side_legos}>>{top_level_side_legos} legos"
    },
    {
      "line_number": "L5",
      "question_inputs": [],
      "WK_inputs": [],
      "output_variable": "top_layer_total_legos",
      "solution_line_template": "Then find the total number of legos on the top level: {top_level_side_legos} legos * {top_level_side_legos} legos = <<{top_level_side_legos}*{top_level_side_legos}={top_layer_total_legos}>>{top_layer_total_legos} legos"
    },
    {
      "line_number": "L6",
      "question_inputs": [],
      "WK_inputs": [],
      "output_variable": "total_legos_needed",
      "solution_line_template": "Then add the number of legos on each level to find the total number of legos: {bottom_layer_total_legos} legos + {second_layer_total_legos} legos + {top_layer_total_legos} legos = <<{bottom_layer_total_legos}+{second_layer_total_legos}+{top_layer_total_legos}={total_legos_needed}>>{total_legos_needed} legos"
    }
  ]
}
```