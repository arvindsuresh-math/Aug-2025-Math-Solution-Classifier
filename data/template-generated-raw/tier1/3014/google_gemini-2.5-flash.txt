{
  "function_code": "def solve():\n    \"\"\"Index: 3014.\n    Returns: the net amount Travis should be paid.\n    \"\"\"\n    # L1\n    lost_bowls = 12 # 12 bowls are lost\n    broken_bowls = 15 # 15 bowls are broken\n    total_lost_broken_bowls = lost_bowls + broken_bowls\n\n    # L2\n    cost_per_lost_broken_bowl = 4 # $4 each for any bowls that are lost or broken\n    payment_for_lost_broken = total_lost_broken_bowls * cost_per_lost_broken_bowl\n\n    # L3\n    total_bowls_to_take = 638 # 638 bowls from the factory\n    safely_delivered_bowls = total_bowls_to_take - total_lost_broken_bowls\n\n    # L4\n    payment_per_safe_bowl = 3 # $3 for every bowl that is delivered safely\n    payment_for_safe_delivery = safely_delivered_bowls * payment_per_safe_bowl\n\n    # L5\n    initial_fee = 100 # a $100 fee\n    total_gross_payment = payment_for_safe_delivery + initial_fee\n\n    # L6\n    net_payment = total_gross_payment - payment_for_lost_broken\n\n    # FA\n    answer = net_payment\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [],
      "line_number": "L1",
      "output_variable": "total_lost_broken_bowls",
      "question_inputs": ["lost_bowls", "broken_bowls"],
      "solution_line_template": "Travis has lost or broken {lost_bowls} + {broken_bowls} = <<{lost_bowls}+{broken_bowls}={total_lost_broken_bowls}>>{total_lost_broken_bowls} bowls."
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "payment_for_lost_broken",
      "question_inputs": ["cost_per_lost_broken_bowl"],
      "solution_line_template": "Travis will need to pay the store {total_lost_broken_bowls} x ${cost_per_lost_broken_bowl} = $<<{total_lost_broken_bowls}*{cost_per_lost_broken_bowl}={payment_for_lost_broken}>>{payment_for_lost_broken} dollars."
    },
    {
      "WK_inputs": [],
      "line_number": "L3",
      "output_variable": "safely_delivered_bowls",
      "question_inputs": ["total_bowls_to_take"],
      "solution_line_template": "Travis has safely taken {total_bowls_to_take} - {total_lost_broken_bowls} = <<{total_bowls_to_take}-{total_lost_broken_bowls}={safely_delivered_bowls}>>{safely_delivered_bowls} bowls."
    },
    {
      "WK_inputs": [],
      "line_number": "L4",
      "output_variable": "payment_for_safe_delivery",
      "question_inputs": ["payment_per_safe_bowl"],
      "solution_line_template": "For this, he will be paid {safely_delivered_bowls} x ${payment_per_safe_bowl} = $<<{safely_delivered_bowls}*{payment_per_safe_bowl}={payment_for_safe_delivery}>>{payment_for_safe_delivery} dollars"
    },
    {
      "WK_inputs": [],
      "line_number": "L5",
      "output_variable": "total_gross_payment",
      "question_inputs": ["initial_fee"],
      "solution_line_template": "In total Travis will be paid ${payment_for_safe_delivery} + ${initial_fee} = $<<{payment_for_safe_delivery}+{initial_fee}={total_gross_payment}>>{total_gross_payment} dollars."
    },
    {
      "WK_inputs": [],
      "line_number": "L6",
      "output_variable": "net_payment",
      "question_inputs": [],
      "solution_line_template": "Since Travis has to pay the home goods {payment_for_lost_broken} for the broken and lost bowls, he will end up with ${total_gross_payment}-${payment_for_lost_broken} = ${net_payment}."
    }
  ]
}