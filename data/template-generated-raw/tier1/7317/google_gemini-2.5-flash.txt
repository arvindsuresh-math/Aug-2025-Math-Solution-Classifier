{
  "function_code": "def solve():\n    \"\"\"Index: 7317.\n    Returns: the total number of days Mark has to wait.\n    \"\"\"\n    # L1\n    weeks_for_effectiveness = 2 # 2 weeks for the vaccine to be fully effective\n    days_per_week = 7 # WK\n    days_for_effectiveness = weeks_for_effectiveness * days_per_week\n\n    # L2\n    wait_first_appointment = 4 # 4 days for his first coronavirus vaccine appointment\n    wait_second_appointment = 20 # 20 days for his second vaccine appointment\n    total_wait_days = wait_first_appointment + wait_second_appointment + days_for_effectiveness\n\n    # FA\n    answer = total_wait_days\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": ["days_per_week"],
      "line_number": "L1",
      "output_variable": "days_for_effectiveness",
      "question_inputs": ["weeks_for_effectiveness"],
      "solution_line_template": "2 weeks have {weeks_for_effectiveness} weeks* {days_per_week} days per week = <<{weeks_for_effectiveness}*{days_per_week}={days_for_effectiveness}>>{days_for_effectiveness} days"
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "total_wait_days",
      "question_inputs": ["wait_first_appointment", "wait_second_appointment"],
      "solution_line_template": "Counting the days until the first and second vaccine, and the days to the vaccine to be fully effective, Mark has to wait {wait_first_appointment} days + {wait_second_appointment} days + {days_for_effectiveness} days = <<{wait_first_appointment}+{wait_second_appointment}+{days_for_effectiveness}={total_wait_days}>>{total_wait_days} days"
    }
  ]
}