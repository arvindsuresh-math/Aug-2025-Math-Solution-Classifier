{
  "function_code": "def solve():\n    \"\"\"Index: 2462.\n    Returns: how many more demerits Andy can get this month before getting fired.\n    \"\"\"\n    # L1\n    demerits_per_late = 2 # 2 demerits per instance for showing up late\n    late_times = 6 # showing up late 6 times\n    demerits_late = demerits_per_late * late_times\n\n    # L2\n    max_demerits = 50 # can get 50 demerits in a month before getting fired\n    demerits_joke = 15 # 15 demerits for making an inappropriate joke\n    demerits_remaining = max_demerits - demerits_late - demerits_joke\n\n    # FA\n    answer = demerits_remaining\n    return answer",
  "logical_steps": [
    {
      "line_number": "L1",
      "question_inputs": ["demerits_per_late", "late_times"],
      "WK_inputs": [],
      "output_variable": "demerits_late",
      "solution_line_template": "First find how many demerits Andy got for showing up late: {demerits_per_late} demerits/time * {late_times} times = <<{demerits_per_late}*{late_times}={demerits_late}>>{demerits_late} demerits"
    },
    {
      "line_number": "L2",
      "question_inputs": ["max_demerits", "demerits_joke"],
      "WK_inputs": [],
      "output_variable": "demerits_remaining",
      "solution_line_template": "Then subtract the number of demerits he's gotten so far to find how many more he can get before getting fired: {max_demerits} demerits - {demerits_late} demerits - {demerits_joke} demerits = <<{max_demerits}-{demerits_late}-{demerits_joke}={demerits_remaining}>>{demerits_remaining} demerits"
    }
  ]
}