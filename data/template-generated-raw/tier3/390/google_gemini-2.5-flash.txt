{
  "function_code": "from fractions import Fraction\n\ndef solve():\n    \"\"\"Index: 390.\n    Returns: the number of weeks Oscar needs to train before the marathon.\n    \"\"\"\n    # L1\n    target_distance = 20 # reaches a 20-mile run\n    current_distance = 2 # he has already run 2 miles\n    distance_to_increase = target_distance - current_distance\n\n    # L2\n    weekly_increase_fraction = Fraction(2, 3) # add 2/3 of a mile each week\n    weeks_needed = distance_to_increase / weekly_increase_fraction\n\n    # FA\n    answer = weeks_needed\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [],
      "line_number": "L1",
      "output_variable": "distance_to_increase",
      "question_inputs": [
        "target_distance",
        "current_distance"
      ],
      "solution_line_template": "Oscar needs to increase his maximum running time from {target_distance} - {current_distance} = <<{target_distance}-{current_distance}={distance_to_increase}>>{distance_to_increase} miles."
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "weeks_needed",
      "question_inputs": [
        "weekly_increase_fraction"
      ],
      "solution_line_template": "Oscar will need a total of {distance_to_increase} / ( {weekly_increase_fraction} ) = <<{distance_to_increase}/({weekly_increase_fraction})={weeks_needed}>>{weeks_needed} weeks to prepare."
    }
  ]
}