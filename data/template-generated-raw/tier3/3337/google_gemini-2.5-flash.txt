{
  "function_code": "from fractions import Fraction\n\ndef solve():\n    \"\"\"Index: 3337.\n    Returns: the total number of white-spotted mushrooms gathered.\n    \"\"\"\n    # L1\n    red_mushrooms = 12 # 12 red mushrooms\n    red_spotted_fraction = Fraction(2, 3) # two-thirds of the red mushrooms\n    spotted_red_mushrooms = red_spotted_fraction * red_mushrooms\n\n    # L2\n    brown_mushrooms = 6 # 6 brown mushrooms\n    brown_spotted_percentage = Fraction(100, 100) # all of the brown mushrooms\n    spotted_brown_mushrooms = brown_spotted_percentage * brown_mushrooms\n\n    # L3\n    green_mushrooms = 14 # 14 green mushrooms\n    green_spotted_percentage = 0 # 0%\n    spotted_green_mushrooms = green_mushrooms * green_spotted_percentage\n\n    # L4\n    blue_mushrooms = 6 # 6 blue mushrooms\n    blue_spotted_fraction = Fraction(1, 2) # half of the blue mushrooms\n    spotted_blue_mushrooms = blue_spotted_fraction * blue_mushrooms\n\n    # L5\n    total_spotted_mushrooms = spotted_red_mushrooms + spotted_brown_mushrooms + spotted_green_mushrooms + spotted_blue_mushrooms\n\n    # FA\n    answer = total_spotted_mushrooms\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [],
      "line_number": "L1",
      "output_variable": "spotted_red_mushrooms",
      "question_inputs": [
        "red_mushrooms",
        "red_spotted_fraction"
      ],
      "solution_line_template": "Of the {red_mushrooms} red mushrooms, {red_spotted_fraction} had spots, for a total of ({red_spotted_fraction})*{red_mushrooms}=<<{red_spotted_fraction}*{red_mushrooms}={spotted_red_mushrooms}>>{spotted_red_mushrooms} white-spotted mushrooms."
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "spotted_brown_mushrooms",
      "question_inputs": [
        "brown_mushrooms",
        "brown_spotted_percentage"
      ],
      "solution_line_template": "Of the {brown_mushrooms} brown mushrooms, 100% had spots, for a total of ({brown_spotted_percentage})*{brown_mushrooms}=<<{brown_mushrooms}*{brown_spotted_percentage}={spotted_brown_mushrooms}>>{spotted_brown_mushrooms} white-spotted mushrooms."
    },
    {
      "WK_inputs": [],
      "line_number": "L3",
      "output_variable": "spotted_green_mushrooms",
      "question_inputs": [
        "green_mushrooms",
        "green_spotted_percentage"
      ],
      "solution_line_template": "Of the {green_mushrooms} green mushrooms, 0% had white spots, for a total of {green_mushrooms}*{green_spotted_percentage}=<<{green_mushrooms}*{green_spotted_percentage}={spotted_green_mushrooms}>>{spotted_green_mushrooms} white-spotted mushrooms."
    },
    {
      "WK_inputs": [],
      "line_number": "L4",
      "output_variable": "spotted_blue_mushrooms",
      "question_inputs": [
        "blue_mushrooms",
        "blue_spotted_fraction"
      ],
      "solution_line_template": "And of the {blue_mushrooms} blue mushrooms, half had spots, for a total of ({blue_spotted_fraction})*{blue_mushrooms}=<<{blue_mushrooms}*{blue_spotted_fraction}={spotted_blue_mushrooms}>>{spotted_blue_mushrooms} white-spotted mushrooms."
    },
    {
      "WK_inputs": [],
      "line_number": "L5",
      "output_variable": "total_spotted_mushrooms",
      "question_inputs": [],
      "solution_line_template": "In total, they gathered {spotted_red_mushrooms}+{spotted_brown_mushrooms}+{spotted_green_mushrooms}+{spotted_blue_mushrooms}=<<{spotted_red_mushrooms}+{spotted_brown_mushrooms}+{spotted_green_mushrooms}+{spotted_blue_mushrooms}={total_spotted_mushrooms}>>{total_spotted_mushrooms} white-spotted mushrooms."
    }
  ]
}