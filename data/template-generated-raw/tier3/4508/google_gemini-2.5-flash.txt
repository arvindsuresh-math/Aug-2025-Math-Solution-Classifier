{
  "function_code": "def solve():\n    \"\"\"Index: 4508.\n    Returns: the total number of dislikes the video has.\n    \"\"\"\n    # L1\n    likes = 3000 # 3000 likes\n    half_divisor = 2 # half as many\n    dislikes_from_half_likes = likes / half_divisor\n\n    # L2\n    initial_dislikes_offset = 100 # 100 more than half as many dislikes\n    current_dislikes = dislikes_from_half_likes + initial_dislikes_offset\n\n    # L3\n    additional_dislikes = 1000 # 1000 more dislikes\n    final_dislikes = current_dislikes + additional_dislikes\n\n    # FA\n    answer = final_dislikes\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [
        "half_divisor"
      ],
      "line_number": "L1",
      "output_variable": "dislikes_from_half_likes",
      "question_inputs": [
        "likes"
      ],
      "solution_line_template": "half as many as {likes} is {likes}/{half_divisor}=<<{likes}/{half_divisor}={dislikes_from_half_likes}>>{dislikes_from_half_likes} dislikes"
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "current_dislikes",
      "question_inputs": [
        "initial_dislikes_offset"
      ],
      "solution_line_template": "{initial_dislikes_offset} more than {dislikes_from_half_likes} is {dislikes_from_half_likes}+{initial_dislikes_offset}=<<{dislikes_from_half_likes}+{initial_dislikes_offset}={current_dislikes}>>{current_dislikes} dislikes"
    },
    {
      "WK_inputs": [],
      "line_number": "L3",
      "output_variable": "final_dislikes",
      "question_inputs": [
        "additional_dislikes"
      ],
      "solution_line_template": "{additional_dislikes} more dislikes is {current_dislikes}+{additional_dislikes}={final_dislikes} dislikes"
    }
  ]
}