{
  "function_code": "def solve():\n    \"\"\"Index: 6426.\n    Returns: the number of 50-segment millipedes needed.\n    \"\"\"\n    # L1\n    segments_initial_millipede = 60 # one millipede with 60 segments\n    twice_factor = 2 # twice as long\n    segments_per_long_millipede = segments_initial_millipede * twice_factor\n\n    # L2\n    number_of_long_millipedes = 2 # 2 millipedes that are twice as long\n    total_segments_from_long_millipedes = segments_per_long_millipede * number_of_long_millipedes\n\n    # L3\n    total_segments_eaten = segments_initial_millipede + total_segments_from_long_millipedes\n\n    # L4\n    daily_segment_goal = 800 # a total of 800 body segments every day\n    segments_still_needed = daily_segment_goal - total_segments_eaten\n\n    # L5\n    segments_per_new_millipede = 50 # 50-segment millipedes\n    num_new_millipedes_needed = segments_still_needed / segments_per_new_millipede\n\n    # FA\n    answer = num_new_millipedes_needed\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [],
      "line_number": "L1",
      "output_variable": "segments_per_long_millipede",
      "question_inputs": [
        "segments_initial_millipede",
        "twice_factor"
      ],
      "solution_line_template": "First, the number of segments in the 2 millipedes that are twice as long is {segments_initial_millipede} segments * {twice_factor} = <<{segments_initial_millipede}*{twice_factor}={segments_per_long_millipede}>>{segments_per_long_millipede} segments."
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "total_segments_from_long_millipedes",
      "question_inputs": [
        "number_of_long_millipedes"
      ],
      "solution_line_template": "Then one can multiply the segments by the {number_of_long_millipedes} millipedes to find the total number of segments: {segments_per_long_millipede} segments/millipede * {number_of_long_millipedes} millipedes = <<{segments_per_long_millipede}*{number_of_long_millipedes}={total_segments_from_long_millipedes}>>{total_segments_from_long_millipedes} segments."
    },
    {
      "WK_inputs": [],
      "line_number": "L3",
      "output_variable": "total_segments_eaten",
      "question_inputs": [],
      "solution_line_template": "In total, we then find the scorpion has eaten one 60-segment millipede in addition to the 3 millipedes above for a total of {segments_initial_millipede} + {total_segments_from_long_millipedes} = <<{segments_initial_millipede}+{total_segments_from_long_millipedes}={total_segments_eaten}>>{total_segments_eaten} segments."
    },
    {
      "WK_inputs": [],
      "line_number": "L4",
      "output_variable": "segments_still_needed",
      "question_inputs": [
        "daily_segment_goal"
      ],
      "solution_line_template": "So, the number of segments it still needs to eat are : {daily_segment_goal} segments - {total_segments_eaten} segments = <<{daily_segment_goal}-{total_segments_eaten}={segments_still_needed}>>{segments_still_needed} segments"
    },
    {
      "WK_inputs": [],
      "line_number": "L5",
      "output_variable": "num_new_millipedes_needed",
      "question_inputs": [
        "segments_per_new_millipede"
      ],
      "solution_line_template": "Thus, it needs to eat an additional {segments_still_needed} segments / {segments_per_new_millipede} segments/millipede = <<{segments_still_needed}/{segments_per_new_millipede}={num_new_millipedes_needed}>>{num_new_millipedes_needed} millipedes."
    }
  ]
}