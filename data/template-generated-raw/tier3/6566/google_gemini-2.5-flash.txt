{
  "function_code": "from fractions import Fraction\n\ndef solve():\n    \"\"\"Index: 6566.\n    Returns: the total number of chairs Thomas will order.\n    \"\"\"\n    # L1\n    initial_dozens_guests = 3 # 3 dozen guests he invites\n    chairs_per_dozen = 12 # WK\n    initial_guests = chairs_per_dozen * initial_dozens_guests\n\n    # L2\n    fraction_guests_bring_guest = Fraction(1, 3) # 1/3 of the guests want to bring a guest of their own\n    guests_bringing_guests = fraction_guests_bring_guest * initial_guests\n\n    # L3\n    total_guests_after_additions = initial_guests + guests_bringing_guests\n\n    # L4\n    guests_cant_make_it = 5 # 5 of the guests he originally invited can't make it\n    guests_after_cancellations = total_guests_after_additions - guests_cant_make_it\n\n    # L5\n    extra_chairs = 12 # 12 extra chairs\n    final_chairs_needed = guests_after_cancellations + extra_chairs\n\n    # FA\n    answer = final_chairs_needed\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [
        "chairs_per_dozen"
      ],
      "line_number": "L1",
      "output_variable": "initial_guests",
      "question_inputs": [
        "initial_dozens_guests"
      ],
      "solution_line_template": "Thomas originally orders chairs for {initial_dozens_guests} dozen guests, {chairs_per_dozen} x {initial_dozens_guests} = {initial_guests} guests"
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "guests_bringing_guests",
      "question_inputs": [
        "fraction_guests_bring_guest"
      ],
      "solution_line_template": "Thomas finds out that {fraction_guests_bring_guest} of the guests want to bring a guest of their own, {fraction_guests_bring_guest} of {initial_guests} = <<{fraction_guests_bring_guest}*{initial_guests}={guests_bringing_guests}>>{guests_bringing_guests}"
    },
    {
      "WK_inputs": [],
      "line_number": "L3",
      "output_variable": "total_guests_after_additions",
      "question_inputs": [],
      "solution_line_template": "The {guests_bringing_guests} guests bring a guest of their own each, {initial_guests} guests + {guests_bringing_guests} guests = <<{initial_guests}+{guests_bringing_guests}={total_guests_after_additions}>>{total_guests_after_additions}"
    },
    {
      "WK_inputs": [],
      "line_number": "L4",
      "output_variable": "guests_after_cancellations",
      "question_inputs": [
        "guests_cant_make_it"
      ],
      "solution_line_template": "Thomas finds out that 20 of the guests can't make it, {total_guests_after_additions} guests - {guests_cant_make_it} guests = {guests_after_cancellations}"
    },
    {
      "WK_inputs": [],
      "line_number": "L5",
      "output_variable": "final_chairs_needed",
      "question_inputs": [
        "extra_chairs"
      ],
      "solution_line_template": "Thomas wants to order an extra {extra_chairs} chairs, {guests_after_cancellations} + {extra_chairs} = <<{guests_after_cancellations}+{extra_chairs}={final_chairs_needed}>>{final_chairs_needed}"
    }
  ]
}