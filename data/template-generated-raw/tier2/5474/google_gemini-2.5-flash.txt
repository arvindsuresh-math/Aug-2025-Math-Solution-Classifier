{
  "function_code": "def solve():\n    \"\"\"Index: 5474.\n    Returns: the number of claims Missy can handle.\n    \"\"\"\n    # L1\n    john_percent_increase_num = 30 # 30% more claims than Jan\n    jan_claims = 20 # Jan can handle 20 claims\n    percent_factor = 0.01 # WK\n    john_additional_claims = john_percent_increase_num * percent_factor * jan_claims\n\n    # L2\n    john_total_claims = jan_claims + john_additional_claims\n\n    # L3\n    missy_additional_claims = 15 # 15 more claims than John\n    missy_total_claims = john_total_claims + missy_additional_claims\n\n    # FA\n    answer = missy_total_claims\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": ["percent_factor"],
      "line_number": "L1",
      "output_variable": "john_additional_claims",
      "question_inputs": ["john_percent_increase_num", "jan_claims"],
      "solution_line_template": "First find the additional number of claims John can handle: {john_percent_increase_num}% * {jan_claims} claims = <<{john_percent_increase_num}*{percent_factor}*{jan_claims}={john_additional_claims}>>{john_additional_claims} claims"
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "john_total_claims",
      "question_inputs": [],
      "solution_line_template": "Then add that amount to Jan's number of claims to find John's number of claims: {jan_claims} claims + {john_additional_claims} claims = <<{jan_claims}+{john_additional_claims}={john_total_claims}>>{john_total_claims} claims"
    },
    {
      "WK_inputs": [],
      "line_number": "L3",
      "output_variable": "missy_total_claims",
      "question_inputs": ["missy_additional_claims"],
      "solution_line_template": "Then add the {missy_additional_claims} additional claims Missy can handle to find her number: {john_total_claims} claims + {missy_additional_claims} claims = <<{missy_additional_claims}+{john_total_claims}={missy_total_claims}>>{missy_total_claims} claims"
    }
  ]
}