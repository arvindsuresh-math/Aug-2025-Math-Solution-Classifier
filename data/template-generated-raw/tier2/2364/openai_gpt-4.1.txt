{
  "function_code": "def solve():\n    \"\"\"Index: 2364.\n    Returns: the lowest grade the absent student can get for the class to still get a pizza party.\n    \"\"\"\n    # L1\n    num_students = 25 # 25 students in the class\n    required_average = 0.75 # average score on their quiz is higher than 75%\n    total_required_percentage = num_students * required_average\n\n    # L2\n    students_present = 24 # One student is absent\n    present_average = 0.77 # average score of the students who took the test was 77%\n    total_present_percentage = students_present * present_average\n\n    # L3\n    percent_factor = 100 # WK\n    lowest_absent_grade = (total_required_percentage - total_present_percentage) * percent_factor\n\n    # FA\n    answer = lowest_absent_grade\n    return answer",
  "logical_steps": [
    {
      "line_number": "L1",
      "question_inputs": ["num_students", "required_average"],
      "WK_inputs": [],
      "output_variable": "total_required_percentage",
      "solution_line_template": "The total percentage the class needs to get is {total_required_percentage} because {num_students} x {required_average} = <<{num_students}*{required_average}={total_required_percentage}>>{total_required_percentage}"
    },
    {
      "line_number": "L2",
      "question_inputs": ["students_present", "present_average"],
      "WK_inputs": [],
      "output_variable": "total_present_percentage",
      "solution_line_template": "The total percentage the class has absent the one student is <<{total_present_percentage}={total_present_percentage}>>{total_present_percentage}"
    },
    {
      "line_number": "L3",
      "question_inputs": [],
      "WK_inputs": ["percent_factor"],
      "output_variable": "lowest_absent_grade",
      "solution_line_template": "The lowest the absent student can get and still have a pizza party is 27% because ({total_required_percentage}-{total_present_percentage})x {percent_factor} = <<({total_required_percentage}-{total_present_percentage})*{percent_factor}={lowest_absent_grade}>>{lowest_absent_grade}"
    }
  ]
}
