{
  "function_code": "from fractions import Fraction\n\ndef solve():\n    \"\"\"Index: 4196.\n    Returns: the number of eggs that actually hatch.\n    \"\"\"\n    # L1\n    total_eggs_per_year = 30 # 30 eggs per year\n    infertile_percent = 0.20 # 20 percent of them are infertile\n    infertile_eggs = total_eggs_per_year * infertile_percent\n\n    # L2\n    eggs_after_infertile = total_eggs_per_year - infertile_eggs\n\n    # L3\n    calcification_fraction = Fraction(1, 3) # a third of the remaining eggs will not hatch\n    calcification_eggs = eggs_after_infertile * calcification_fraction\n\n    # L4\n    hatchable_eggs = eggs_after_infertile - calcification_eggs\n\n    # FA\n    answer = hatchable_eggs\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [],
      "line_number": "L1",
      "output_variable": "infertile_eggs",
      "question_inputs": [
        "total_eggs_per_year",
        "infertile_percent"
      ],
      "solution_line_template": "Infertile:{total_eggs_per_year}({infertile_percent})={infertile_eggs}"
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "eggs_after_infertile",
      "question_inputs": [],
      "solution_line_template": "{total_eggs_per_year}-{infertile_eggs}=<<{total_eggs_per_year}-{infertile_eggs}={eggs_after_infertile}>>{eggs_after_infertile} eggs remain"
    },
    {
      "WK_inputs": [],
      "line_number": "L3",
      "output_variable": "calcification_eggs",
      "question_inputs": [
        "calcification_fraction"
      ],
      "solution_line_template": "Calcification Issues:{eggs_after_infertile}({calcification_fraction})={calcification_eggs}"
    },
    {
      "WK_inputs": [],
      "line_number": "L4",
      "output_variable": "hatchable_eggs",
      "question_inputs": [],
      "solution_line_template": "{eggs_after_infertile}-{calcification_eggs}=<<{eggs_after_infertile}-{calcification_eggs}={hatchable_eggs}>>{hatchable_eggs} eggs that will hatch"
    }
  ]
}