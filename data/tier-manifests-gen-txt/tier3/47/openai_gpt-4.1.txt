{
  "function_code": "def solve():\n    \"\"\"Index: 47.\n    Returns: the total time in seconds to download the entire file.\n    \"\"\"\n    # L1\n    first_chunk_size = 60 # first 60 megabytes\n    first_chunk_rate = 5 # 5 megabytes per second\n    first_chunk_time = first_chunk_size / first_chunk_rate\n\n    # L2\n    total_file_size = 90 # 90 megabytes in size\n    remaining_chunk_size = total_file_size - first_chunk_size\n\n    # L3\n    remaining_chunk_rate = 10 # 10 megabytes per second thereafter\n    remaining_chunk_time = remaining_chunk_size / remaining_chunk_rate\n\n    # L4\n    answer = first_chunk_time + remaining_chunk_time\n    return answer",
  "logical_steps": [
    {
      "line_number": "L1",
      "question_inputs": ["first_chunk_size", "first_chunk_rate"],
      "WK_inputs": [],
      "output_variable": "first_chunk_time",
      "solution_line_template": "The first {first_chunk_size} megabytes take {first_chunk_size}/{first_chunk_rate}=<<{first_chunk_size}/{first_chunk_rate}={first_chunk_time}>>{first_chunk_time} seconds."
    },
    {
      "line_number": "L2",
      "question_inputs": ["total_file_size", "first_chunk_size"],
      "WK_inputs": [],
      "output_variable": "remaining_chunk_size",
      "solution_line_template": "There are {total_file_size}-{first_chunk_size}=<<{total_file_size}-{first_chunk_size}={remaining_chunk_size}>>{remaining_chunk_size} remaining megabytes."
    },
    {
      "line_number": "L3",
      "question_inputs": ["remaining_chunk_size", "remaining_chunk_rate"],
      "WK_inputs": [],
      "output_variable": "remaining_chunk_time",
      "solution_line_template": "The remaining {remaining_chunk_size} megabytes take {remaining_chunk_size}/{remaining_chunk_rate}=<<{remaining_chunk_size}/{remaining_chunk_rate}={remaining_chunk_time}>>{remaining_chunk_time} seconds."
    },
    {
      "line_number": "L4",
      "question_inputs": [],
      "WK_inputs": [],
      "output_variable": "answer",
      "solution_line_template": "And {first_chunk_time}+{remaining_chunk_time}=<<{first_chunk_time}+{remaining_chunk_time}={answer}>>{answer} seconds."
    }
  ]
}
