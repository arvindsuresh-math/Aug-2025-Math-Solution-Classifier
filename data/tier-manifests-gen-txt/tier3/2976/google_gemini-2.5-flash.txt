{
  "function_code": "def solve():\n    \"\"\"Index: 2976.\n    Returns: the total number of fences Abigail would have built.\n    \"\"\"\n    # L1\n    hours_to_build = 8 # for the next 8 hours\n    minutes_per_hour = 60 # WK\n    total_minutes_building = hours_to_build * minutes_per_hour\n\n    # L2\n    minutes_per_fence = 30 # Each fence took her 30 minutes to build\n    fences_built_in_additional_hours = total_minutes_building / minutes_per_fence\n\n    # L3\n    initial_fences_built = 10 # Abigail built 10 fences\n    total_fences_built = initial_fences_built + fences_built_in_additional_hours\n\n    # FA\n    answer = total_fences_built\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [
        "minutes_per_hour"
      ],
      "line_number": "L1",
      "output_variable": "total_minutes_building",
      "question_inputs": [
        "hours_to_build"
      ],
      "solution_line_template": "{hours_to_build}*{minutes_per_hour} = <<{hours_to_build}*{minutes_per_hour}={total_minutes_building}>>{total_minutes_building} minutes are in the next {hours_to_build} hours."
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "fences_built_in_additional_hours",
      "question_inputs": [
        "minutes_per_fence"
      ],
      "solution_line_template": "Abigail builds {total_minutes_building}/{minutes_per_fence} = <<{total_minutes_building}/{minutes_per_fence}={fences_built_in_additional_hours}>>{fences_built_in_additional_hours} fences."
    },
    {
      "WK_inputs": [],
      "line_number": "L3",
      "output_variable": "total_fences_built",
      "question_inputs": [
        "initial_fences_built"
      ],
      "solution_line_template": "Abigail will have built {initial_fences_built}+{fences_built_in_additional_hours} = <<{initial_fences_built}+{fences_built_in_additional_hours}={total_fences_built}>>{total_fences_built} fences in total."
    }
  ]
}