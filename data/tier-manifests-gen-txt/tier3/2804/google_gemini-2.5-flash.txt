{
  "function_code": "def solve():\n    \"\"\"Index: 2804.\n    Returns: the total number of tears Trent cries.\n    \"\"\"\n    # L1\n    onions_per_pot = 4 # 4 onions per pot\n    num_pots = 6 # 6 pots of soup\n    total_onions = onions_per_pot * num_pots\n\n    # L2\n    onions_per_set_of_tears = 3 # three onions per 2 tears\n    num_sets_of_tears = total_onions / onions_per_set_of_tears\n\n    # L3\n    tears_per_set = 2 # 2 tears for every three onions\n    total_tears = num_sets_of_tears * tears_per_set\n\n    # FA\n    answer = total_tears\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [],
      "line_number": "L1",
      "output_variable": "total_onions",
      "question_inputs": [
        "onions_per_pot",
        "num_pots"
      ],
      "solution_line_template": "First find how many onions total Trent needs to chop: {onions_per_pot} onions/pot * {num_pots} pots = <<{onions_per_pot}*{num_pots}={total_onions}>>{total_onions} onions"
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "num_sets_of_tears",
      "question_inputs": [
        "onions_per_set_of_tears"
      ],
      "solution_line_template": "Then divide that number by three onions per 2 tears to find how many sets of two tears Trent cries: {total_onions} onions / {onions_per_set_of_tears} onions = <<{total_onions}/{onions_per_set_of_tears}={num_sets_of_tears}>>{num_sets_of_tears}"
    },
    {
      "WK_inputs": [],
      "line_number": "L3",
      "output_variable": "total_tears",
      "question_inputs": [
        "tears_per_set"
      ],
      "solution_line_template": "Then multiply that number by the number of tears per set to find the total number of tears: {num_sets_of_tears} * {tears_per_set} tears = <<{num_sets_of_tears}*{tears_per_set}={total_tears}>>{total_tears} tears"
    }
  ]
}