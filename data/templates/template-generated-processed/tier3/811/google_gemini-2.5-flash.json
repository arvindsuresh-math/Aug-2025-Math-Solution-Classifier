[
  {
    "WK_inputs": [],
    "line_number": "L1",
    "output_variable": "remaining_after_sale",
    "question_inputs": [
      "initial_stock",
      "sold_fish"
    ],
    "solution_line_template": "If he had {initial_stock} fish and sells {sold_fish}, he is left with {initial_stock} - {sold_fish} = <<{initial_stock}-{sold_fish}={remaining_after_sale}>>{remaining_after_sale} fish"
  },
  {
    "WK_inputs": [],
    "line_number": "L2",
    "output_variable": "spoiled_fish",
    "question_inputs": [
      "spoiled_fraction"
    ],
    "solution_line_template": "If a third of them get spoiled {spoiled_fraction} * {remaining_after_sale} = <<{remaining_after_sale}*{spoiled_fraction}={spoiled_fish}>>{spoiled_fish} fish get spoiled"
  },
  {
    "WK_inputs": [],
    "line_number": "L3",
    "output_variable": "remaining_after_spoilage",
    "question_inputs": [],
    "solution_line_template": "The remaining number of fish is now {remaining_after_sale} - {spoiled_fish} = <<{remaining_after_sale}-{spoiled_fish}={remaining_after_spoilage}>>{remaining_after_spoilage}"
  },
  {
    "WK_inputs": [],
    "line_number": "L4",
    "output_variable": "total_current_stock",
    "question_inputs": [
      "new_stock"
    ],
    "solution_line_template": "He then gets {new_stock} more to make {remaining_after_spoilage} + {new_stock} = <<{remaining_after_spoilage}+{new_stock}={total_current_stock}>>{total_current_stock} fish"
  }
]