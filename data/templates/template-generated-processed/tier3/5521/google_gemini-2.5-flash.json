[
  {
    "WK_inputs": [],
    "line_number": "L1",
    "output_variable": "total_hours_temp_proof",
    "question_inputs": [
      "room_temp_time_hours",
      "proof_time_hours"
    ],
    "solution_line_template": "It takes {room_temp_time_hours} hour to bring the dough to room temp and {proof_time_hours} hours to proof the dough so that's {room_temp_time_hours}+{proof_time_hours} = <<{room_temp_time_hours}+{proof_time_hours}={total_hours_temp_proof}>>{total_hours_temp_proof} hours"
  },
  {
    "WK_inputs": [],
    "line_number": "L2",
    "output_variable": "total_minutes_shape_bake_cool",
    "question_inputs": [
      "shape_time_minutes",
      "bake_time_minutes",
      "cool_time_minutes"
    ],
    "solution_line_template": "It takes {shape_time_minutes} minutes to shape the dough, {bake_time_minutes} minutes to bake and another {cool_time_minutes} minutes to cool for a total of {shape_time_minutes}+{bake_time_minutes}+{cool_time_minutes} = <<{shape_time_minutes}+{bake_time_minutes}+{cool_time_minutes}={total_minutes_shape_bake_cool}>>{total_minutes_shape_bake_cool} minutes"
  },
  {
    "WK_inputs": [
      "minutes_per_hour"
    ],
    "line_number": "L3",
    "output_variable": "minutes_to_hours_conversion",
    "question_inputs": [],
    "solution_line_template": "There are {minutes_per_hour} minutes in 1 hour so that takes him {total_minutes_shape_bake_cool}/{minutes_per_hour} = <<{total_minutes_shape_bake_cool}/{minutes_per_hour}={minutes_to_hours_conversion}>>{minutes_to_hours_conversion} hour"
  },
  {
    "WK_inputs": [],
    "line_number": "L4",
    "output_variable": "total_prep_time_hours",
    "question_inputs": [],
    "solution_line_template": "In total it takes {total_hours_temp_proof}+{minutes_to_hours_conversion} = <<{total_hours_temp_proof}+{minutes_to_hours_conversion}={total_prep_time_hours}>>{total_prep_time_hours} hours from start to finish to make the bread"
  },
  {
    "WK_inputs": [],
    "line_number": "L5",
    "output_variable": "arrival_hour",
    "question_inputs": [
      "opening_hour"
    ],
    "solution_line_template": "If the bakery opens at {opening_hour}:00 am and it takes {total_prep_time_hours} hours to prep then the latest the head baker can show up is {opening_hour}-{total_prep_time_hours} = <<{opening_hour}-{total_prep_time_hours}={arrival_hour}>>{arrival_hour}:00 am"
  }
]