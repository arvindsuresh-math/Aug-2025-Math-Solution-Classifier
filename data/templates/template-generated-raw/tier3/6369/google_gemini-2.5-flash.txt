{
  "function_code": "def solve():\n    \"\"\"Index: 6369.\n    Returns: the length of each final piece of rope.\n    \"\"\"\n    # L1\n    total_rope_length = 200 # A rope has a length of 200 meters\n    num_initial_parts = 4 # cuts the rope into four equal parts\n    length_of_each_initial_piece = total_rope_length / num_initial_parts\n\n    # L2\n    subdivision_factor = 2 # subdivides the remaining pieces into two more equal parts\n    final_piece_length = length_of_each_initial_piece / subdivision_factor\n\n    # FA\n    answer = final_piece_length\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [],
      "line_number": "L1",
      "output_variable": "length_of_each_initial_piece",
      "question_inputs": [
        "total_rope_length",
        "num_initial_parts"
      ],
      "solution_line_template": "When Stefan cuts the rope into {num_initial_parts} equal parts, he gets {total_rope_length}/{num_initial_parts} = <<{total_rope_length}/{num_initial_parts}={length_of_each_initial_piece}>>{length_of_each_initial_piece} meters of each piece."
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "final_piece_length",
      "question_inputs": [
        "subdivision_factor"
      ],
      "solution_line_template": "If he decides to subdivide each piece, he and up with {length_of_each_initial_piece}/{subdivision_factor} = <<{length_of_each_initial_piece}/{subdivision_factor}={final_piece_length}>>{final_piece_length} meters."
    }
  ]
}