{
  "function_code": "def solve():\n    \"\"\"Index: 5627.\n    Returns: the total number of errors fixed.\n    \"\"\"\n    # L1\n    total_lines_of_code = 4300 # 4300 lines of code\n    debug_interval = 100 # Every 100 lines of code\n    debug_times = total_lines_of_code / debug_interval\n\n    # L2\n    errors_per_debug = 3 # only finds three errors\n    total_errors_fixed = debug_times * errors_per_debug\n\n    # FA\n    answer = total_errors_fixed\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [],
      "line_number": "L1",
      "output_variable": "debug_times",
      "question_inputs": [
        "total_lines_of_code",
        "debug_interval"
      ],
      "solution_line_template": "Genevieve has debugged the program {total_lines_of_code} / {debug_interval} = <<{total_lines_of_code}/{debug_interval}={debug_times}>>{debug_times} times."
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "total_errors_fixed",
      "question_inputs": [
        "errors_per_debug"
      ],
      "solution_line_template": "Thus, she has fixed {debug_times} * {errors_per_debug} = <<{debug_times}*{errors_per_debug}={total_errors_fixed}>>{total_errors_fixed} errors so far."
    }
  ]
}