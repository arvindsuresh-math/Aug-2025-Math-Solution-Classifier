{
  "function_code": "def solve():\n    \"\"\"Index: 4504.\n    Returns: the total miles the car can drive in 13 hours.\n    \"\"\"\n    # L1\n    miles_per_hour = 8 # 8 miles in one hour\n    initial_driving_hours = 5 # After 5 hours of constant driving\n    miles_in_initial_driving = miles_per_hour * initial_driving_hours\n\n    # L2\n    pause_duration = 1 # takes 1 hour\n    cycle_duration = initial_driving_hours + pause_duration\n\n    # L3\n    total_time = 13 # in 13 hours\n    num_full_cycles = total_time // cycle_duration\n    remaining_hours_after_cycles = total_time % cycle_duration\n\n    # L4\n    duration_of_full_cycles = num_full_cycles * cycle_duration\n\n    # L5\n    miles_driven_in_full_cycles = miles_in_initial_driving * num_full_cycles\n\n    # L6\n    remaining_driving_time_from_total = total_time - duration_of_full_cycles\n\n    # L7\n    total_miles_driven = miles_driven_in_full_cycles + miles_per_hour\n\n    # FA\n    answer = total_miles_driven\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [],
      "line_number": "L1",
      "output_variable": "miles_in_initial_driving",
      "question_inputs": [
        "miles_per_hour",
        "initial_driving_hours"
      ],
      "solution_line_template": "In {initial_driving_hours} hours the car can drive {miles_per_hour} * {initial_driving_hours} = <<{miles_per_hour}*{initial_driving_hours}={miles_in_initial_driving}>>{miles_in_initial_driving} miles."
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "cycle_duration",
      "question_inputs": [
        "pause_duration"
      ],
      "solution_line_template": "One cycle of driving and pause takes {initial_driving_hours} + {pause_duration} = <<{initial_driving_hours}+{pause_duration}={cycle_duration}>>{cycle_duration} hours."
    },
    {
      "WK_inputs": [],
      "line_number": "L3",
      "output_variable": "num_full_cycles",
      "question_inputs": [
        "total_time"
      ],
      "solution_line_template": "In {total_time} hours this cycle can fit {total_time} / {cycle_duration} = {num_full_cycles} full cycles with a remainder of {remaining_hours_after_cycles} hour"
    },
    {
      "WK_inputs": [],
      "line_number": "L4",
      "output_variable": "duration_of_full_cycles",
      "question_inputs": [],
      "solution_line_template": "{num_full_cycles} cycles will last for {num_full_cycles} * {cycle_duration} = <<{num_full_cycles}*{cycle_duration}={duration_of_full_cycles}>>{duration_of_full_cycles} hours."
    },
    {
      "WK_inputs": [],
      "line_number": "L5",
      "output_variable": "miles_driven_in_full_cycles",
      "question_inputs": [],
      "solution_line_template": "During {num_full_cycles} full cycles, the car will drive {miles_in_initial_driving} * {num_full_cycles} = <<{miles_in_initial_driving}*{num_full_cycles}={miles_driven_in_full_cycles}>>{miles_driven_in_full_cycles} miles."
    },
    {
      "WK_inputs": [],
      "line_number": "L6",
      "output_variable": "remaining_driving_time_from_total",
      "question_inputs": [],
      "solution_line_template": "So there is {total_time} - {duration_of_full_cycles} = <<{total_time}-{duration_of_full_cycles}={remaining_driving_time_from_total}>>{remaining_driving_time_from_total} remaining hour when the car can drive."
    },
    {
      "WK_inputs": [],
      "line_number": "L7",
      "output_variable": "total_miles_driven",
      "question_inputs": [],
      "solution_line_template": "That means during {total_time} hours the car will be able to drive {miles_driven_in_full_cycles} + {miles_per_hour} = {total_miles_driven} miles."
    }
  ]
}