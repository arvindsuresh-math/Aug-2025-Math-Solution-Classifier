{
  "function_code": "from fractions import Fraction\n\ndef solve():\n    \"\"\"Index: 4643.\n    Returns: the total amount of money to be paid back.\n    \"\"\"\n    # L1\n    borrowed_amount = 100 # borrowed $100 from your friend\n    increase_percentage_numerator = 10 # 10% increase\n    increase_percentage_denominator = 100 # 10% increase\n    increase_amount = borrowed_amount * Fraction(increase_percentage_numerator, increase_percentage_denominator)\n\n    # L2\n    total_payment = borrowed_amount + increase_amount\n\n    # FA\n    answer = total_payment\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [],
      "line_number": "L1",
      "output_variable": "increase_amount",
      "question_inputs": [
        "borrowed_amount",
        "increase_percentage_numerator",
        "increase_percentage_denominator"
      ],
      "solution_line_template": "The increase is ${borrowed_amount} x {increase_percentage_numerator}/{increase_percentage_denominator} = $<<{borrowed_amount}*{increase_percentage_numerator}/{increase_percentage_denominator}={increase_amount}>>{increase_amount}."
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "total_payment",
      "question_inputs": [],
      "solution_line_template": "So you have to give ${borrowed_amount} + ${increase_amount} = $<<{borrowed_amount}+{increase_amount}={total_payment}>>{total_payment} to your friend today."
    }
  ]
}