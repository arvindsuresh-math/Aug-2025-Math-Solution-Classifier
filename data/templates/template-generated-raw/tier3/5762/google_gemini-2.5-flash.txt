{
  "function_code": "def solve():\n    \"\"\"Index: 5762.\n    Returns: the total number of hours required to complete all lice checks.\n    \"\"\"\n    # L1\n    kindergarteners = 26 # 26 Kindergarteners\n    first_graders = 19 # 19 first graders\n    second_graders = 20 # 20 second graders\n    third_graders = 25 # 25 third graders\n    total_students = kindergarteners + first_graders + second_graders + third_graders\n\n    # L2\n    minutes_per_check = 2 # each check takes 2 minutes\n    total_minutes = total_students * minutes_per_check\n\n    # L3\n    minutes_per_hour = 60 # WK\n    total_hours = total_minutes / minutes_per_hour\n\n    # FA\n    answer = total_hours\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [],
      "line_number": "L1",
      "output_variable": "total_students",
      "question_inputs": [
        "kindergarteners",
        "first_graders",
        "second_graders",
        "third_graders"
      ],
      "solution_line_template": "The school nurse must check a total of {kindergarteners} Kindergarteners + {first_graders} first graders + {second_graders} second graders + {third_graders} third graders = <<{kindergarteners}+{first_graders}+{second_graders}+{third_graders}={total_students}>>{total_students} students in all."
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "total_minutes",
      "question_inputs": [
        "minutes_per_check"
      ],
      "solution_line_template": "If every check takes {minutes_per_check} minutes, it will take {total_students} students x {minutes_per_check} minutes = <<{total_students}*{minutes_per_check}={total_minutes}>>{total_minutes} minutes."
    },
    {
      "WK_inputs": [
        "minutes_per_hour"
      ],
      "line_number": "L3",
      "output_variable": "total_hours",
      "question_inputs": [],
      "solution_line_template": "There are {minutes_per_hour} minutes in one hour, so it will take {total_minutes} minutes / {minutes_per_hour} = <<{total_minutes}/{minutes_per_hour}={total_hours}>>{total_hours} hours to complete the checks."
    }
  ]
}