{
  "function_code": "def solve():\n    \"\"\"Index: 3813.\n    Returns: the number of candles Carmen will use.\n    \"\"\"\n    # L1\n    initial_burn_hours = 1 # Burning a candle for 1 hour\n    initial_duration_nights = 8 # lasts her 8 nights\n    new_burn_hours = 2 # burns the candle for 2 hours a night\n    new_duration_nights = initial_duration_nights / new_burn_hours\n\n    # L2\n    total_nights_needed = 24 # over 24 nights\n    candles_needed = total_nights_needed / new_duration_nights\n\n    # FA\n    answer = candles_needed\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [],
      "line_number": "L1",
      "output_variable": "new_duration_nights",
      "question_inputs": [
        "initial_burn_hours",
        "initial_duration_nights",
        "new_burn_hours"
      ],
      "solution_line_template": "Burning a candle for {initial_burn_hours} hour lasts her {initial_duration_nights} nights so if she burns for {new_burn_hours} hours it will last her {initial_duration_nights}/{new_burn_hours} = <<{initial_burn_hours}*{initial_duration_nights}/{new_burn_hours}={new_duration_nights}>>{new_duration_nights} nights"
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "candles_needed",
      "question_inputs": [
        "total_nights_needed"
      ],
      "solution_line_template": "{initial_burn_hours} candle now lasts {new_duration_nights} nights and she needs enough for {total_nights_needed} nights so she needs {total_nights_needed}/{new_duration_nights} = <<{total_nights_needed}/{new_duration_nights}={candles_needed}>>{candles_needed} candles"
    }
  ]
}