{
  "function_code": "from fractions import Fraction\n\ndef solve():\n    \"\"\"Index: 1187.\n    Returns: the maximum number of apples Brian can buy.\n    \"\"\"\n    # L1\n    subway_fare_one_way = 3.50 # pay the $3.50 subway fare each way\n    total_subway_fare = subway_fare_one_way + subway_fare_one_way\n\n    # L2\n    kiwi_cost = 10 # spent $10 on kiwis\n    banana_fraction = Fraction(1, 2) # half that much on bananas\n    banana_cost = banana_fraction * kiwi_cost\n\n    # L3\n    total_spent_so_far = total_subway_fare + banana_cost + kiwi_cost\n\n    # L4\n    initial_money = 50 # left his house with only $50\n    money_left_for_apples = initial_money - total_spent_so_far\n\n    # L5\n    cost_per_bag_apples = 14 # A bag of dozen apples costs $14\n    num_bags_apples = money_left_for_apples / cost_per_bag_apples\n\n    # L6\n    apples_per_dozen = 12 # WK\n    total_apples = apples_per_dozen * num_bags_apples\n\n    # FA\n    answer = total_apples\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [],
      "line_number": "L1",
      "output_variable": "total_subway_fare",
      "question_inputs": ["subway_fare_one_way"],
      "solution_line_template": "Brian requires a total of ${subway_fare_one_way} + ${subway_fare_one_way} = $<<{subway_fare_one_way}+{subway_fare_one_way}={total_subway_fare}>>{total_subway_fare} to pay for the round trip subway fare"
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "banana_cost",
      "question_inputs": ["banana_fraction", "kiwi_cost"],
      "solution_line_template": "We also know he has spent half ({banana_fraction}) the amount he spent on kiwis on bananas, so he'll spend ({banana_fraction}) * ${kiwi_cost} = ${banana_cost} on bananas"
    },
    {
      "WK_inputs": [],
      "line_number": "L3",
      "output_variable": "total_spent_so_far",
      "question_inputs": [],
      "solution_line_template": "So far in total he has spent ${total_subway_fare} for his subway fare + ${banana_cost} on bananas + ${kiwi_cost} on kiwis = ${total_subway_fare} + ${banana_cost} + ${kiwi_cost} = $<<{total_subway_fare}+{banana_cost}+{kiwi_cost}={total_spent_so_far}>>{total_spent_so_far}"
    },
    {
      "WK_inputs": [],
      "line_number": "L4",
      "output_variable": "money_left_for_apples",
      "question_inputs": ["initial_money"],
      "solution_line_template": "If he left his house with only ${initial_money}, then all he will have left for apples would be ${initial_money} - ${total_spent_so_far} = $<<{initial_money}-{total_spent_so_far}={money_left_for_apples}>>{money_left_for_apples}"
    },
    {
      "WK_inputs": [],
      "line_number": "L5",
      "output_variable": "num_bags_apples",
      "question_inputs": ["cost_per_bag_apples"],
      "solution_line_template": "If a bag of apples costs ${cost_per_bag_apples}, then Brian would only be able to buy a maximum of ${money_left_for_apples}/${cost_per_bag_apples} = {num_bags_apples} bags of apples"
    },
    {
      "WK_inputs": ["apples_per_dozen"],
      "line_number": "L6",
      "output_variable": "total_apples",
      "question_inputs": [],
      "solution_line_template": "If each bag of apples has a dozen ({apples_per_dozen}) apples, then ({num_bags_apples}) two bags will have {apples_per_dozen}*{num_bags_apples}= <<{num_bags_apples}*{apples_per_dozen}={total_apples}>>{total_apples} apples"
    }
  ]
}