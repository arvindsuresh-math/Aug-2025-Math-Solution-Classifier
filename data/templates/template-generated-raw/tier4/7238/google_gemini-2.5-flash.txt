{
  "function_code": "def solve():\n    \"\"\"Index: 7238.\n    Returns: the weight of the first pack needed.\n    \"\"\"\n    # L1\n    hours_per_day = 8 # 8 hours a day\n    num_days = 5 # for 5 days\n    total_hiking_hours = hours_per_day * num_days\n\n    # L2\n    hiking_rate_mph = 2.5 # hike at a rate of 2.5 mph\n    total_miles = total_hiking_hours * hiking_rate_mph\n\n    # L3\n    supplies_per_mile = 0.5 # pack about .5 pounds of supplies for every mile\n    total_supplies_needed = total_miles * supplies_per_mile\n\n    # L4\n    base_pack_factor = 1 # WK\n    resupply_percentage = 0.25 # 25% as large as his first pack\n    total_pack_multiplier = base_pack_factor + resupply_percentage\n\n    # L5\n    initial_pack_weight = total_supplies_needed / total_pack_multiplier\n\n    # FA\n    answer = initial_pack_weight\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [],
      "line_number": "L1",
      "output_variable": "total_hiking_hours",
      "question_inputs": ["hours_per_day", "num_days"],
      "solution_line_template": "He is going to hike {hours_per_day}*{num_days}={total_hiking_hours} hours"
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "total_miles",
      "question_inputs": ["hiking_rate_mph"],
      "solution_line_template": "That means he will be hiking for {total_hiking_hours}*{hiking_rate_mph}=<<{total_hiking_hours}*{hiking_rate_mph}={total_miles}>>{total_miles} miles"
    },
    {
      "WK_inputs": [],
      "line_number": "L3",
      "output_variable": "total_supplies_needed",
      "question_inputs": ["supplies_per_mile"],
      "solution_line_template": "So he needs {total_miles}*{supplies_per_mile}=<<{total_miles}*{supplies_per_mile}={total_supplies_needed}>>{total_supplies_needed} pounds of supplies"
    },
    {
      "WK_inputs": ["base_pack_factor"],
      "line_number": "L4",
      "output_variable": "total_pack_multiplier",
      "question_inputs": ["resupply_percentage"],
      "solution_line_template": "With the resupply he can get up to {base_pack_factor}+{resupply_percentage}=<<{base_pack_factor}+{resupply_percentage}={total_pack_multiplier}>>{total_pack_multiplier} times his initial pack"
    },
    {
      "WK_inputs": [],
      "line_number": "L5",
      "output_variable": "initial_pack_weight",
      "question_inputs": [],
      "solution_line_template": "That means his initial pack has to weigh {total_supplies_needed}/{total_pack_multiplier}=<<{total_supplies_needed}/{total_pack_multiplier}={initial_pack_weight}>>{initial_pack_weight} pounds"
    }
  ]
}