{
  "function_code": "def solve():\n    \"\"\"Index: 4163.\n    Returns: the total profit made from stock transactions.\n    \"\"\"\n    # L1\n    cost_per_share_initial = 3 # costs $3 each\n    initial_shares_bought = 20 # buys 20 shares\n    initial_cost = cost_per_share_initial * initial_shares_bought\n\n    # L2\n    shares_sold_first_batch = 10 # sells 10 of those shares\n    price_per_share_first_sale = 4 # for $4 each\n    revenue_first_sale = shares_sold_first_batch * price_per_share_first_sale\n\n    # L3\n    remaining_shares = initial_shares_bought - shares_sold_first_batch\n\n    # L4\n    doubling_factor = 2 # doubling in value\n    price_per_share_second_sale = cost_per_share_initial * doubling_factor\n\n    # L5\n    revenue_second_sale = remaining_shares * price_per_share_second_sale\n\n    # L6\n    total_revenue = revenue_second_sale + revenue_first_sale\n\n    # L7\n    profit = total_revenue - initial_cost\n\n    # FA\n    answer = profit\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [],
      "line_number": "L1",
      "output_variable": "initial_cost",
      "question_inputs": ["cost_per_share_initial", "initial_shares_bought"],
      "solution_line_template": "He spends {cost_per_share_initial}*{initial_shares_bought}=$<<{cost_per_share_initial}*{initial_shares_bought}={initial_cost}>>{initial_cost} on the shares."
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "revenue_first_sale",
      "question_inputs": ["shares_sold_first_batch", "price_per_share_first_sale"],
      "solution_line_template": "He sells {shares_sold_first_batch} for {shares_sold_first_batch}*{price_per_share_first_sale}=$<<{shares_sold_first_batch}*{price_per_share_first_sale}={revenue_first_sale}>>{revenue_first_sale}."
    },
    {
      "WK_inputs": [],
      "line_number": "L3",
      "output_variable": "remaining_shares",
      "question_inputs": [],
      "solution_line_template": "He sells the other {initial_shares_bought}-{shares_sold_first_batch}=<<{initial_shares_bought}-{shares_sold_first_batch}={remaining_shares}>>{remaining_shares} for a higher valuation."
    },
    {
      "WK_inputs": [],
      "line_number": "L4",
      "output_variable": "price_per_share_second_sale",
      "question_inputs": ["doubling_factor"],
      "solution_line_template": "Their price was {cost_per_share_initial}*{doubling_factor}=$<<{cost_per_share_initial}*{doubling_factor}={price_per_share_second_sale}>>{price_per_share_second_sale}."
    },
    {
      "WK_inputs": [],
      "line_number": "L5",
      "output_variable": "revenue_second_sale",
      "question_inputs": [],
      "solution_line_template": "So he got {remaining_shares}*{price_per_share_second_sale}=$<<{remaining_shares}*{price_per_share_second_sale}={revenue_second_sale}>>{revenue_second_sale} from those."
    },
    {
      "WK_inputs": [],
      "line_number": "L6",
      "output_variable": "total_revenue",
      "question_inputs": [],
      "solution_line_template": "So in total, he got {revenue_second_sale}+{revenue_first_sale}=$<<{revenue_second_sale}+{revenue_first_sale}={total_revenue}>>{total_revenue}."
    },
    {
      "WK_inputs": [],
      "line_number": "L7",
      "output_variable": "profit",
      "question_inputs": [],
      "solution_line_template": "So his profit was {total_revenue}-{initial_cost}=$<<{total_revenue}-{initial_cost}={profit}>>{profit}."
    }
  ]
}