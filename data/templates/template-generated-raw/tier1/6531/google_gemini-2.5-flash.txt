{
  "function_code": "def solve():\n    \"\"\"Index: 6531.\n    Returns: the number of logs left after 3 hours.\n    \"\"\"\n    # L1\n    hours = 3 # after 3 hours\n    logs_added_per_hour = 2 # two more logs added to it at the end of every hour\n    total_logs_added = hours * logs_added_per_hour\n\n    # L2\n    logs_burned_per_hour = 3 # burns three logs every hour\n    total_logs_burned = logs_burned_per_hour * hours\n\n    # L3\n    initial_logs = 6 # built with six logs to start\n    logs_left = initial_logs + total_logs_added - total_logs_burned\n\n    # FA\n    answer = logs_left\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [],
      "line_number": "L1",
      "output_variable": "total_logs_added",
      "question_inputs": ["hours", "logs_added_per_hour"],
      "solution_line_template": "After {hours} hours, it will have {hours} * {logs_added_per_hour} = <<{hours}*{logs_added_per_hour}={total_logs_added}>>{total_logs_added} logs added to it."
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "total_logs_burned",
      "question_inputs": ["logs_burned_per_hour"],
      "solution_line_template": "After {hours} hours, it will have burned {logs_burned_per_hour} * {hours} = <<{logs_burned_per_hour}*{hours}={total_logs_burned}>>{total_logs_burned} logs."
    },
    {
      "WK_inputs": [],
      "line_number": "L3",
      "output_variable": "logs_left",
      "question_inputs": ["initial_logs"],
      "solution_line_template": "After {hours} hours, the cookfire will have {initial_logs} + {total_logs_added} - {total_logs_burned} = <<{initial_logs}+{total_logs_added}-{total_logs_burned}={logs_left}>>{logs_left} logs left."
    }
  ]
}