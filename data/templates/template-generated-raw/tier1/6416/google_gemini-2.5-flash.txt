{
  "function_code": "def solve():\n    \"\"\"Index: 6416.\n    Returns: the number of steps forward Frank is from his original starting point.\n    \"\"\"\n    # L1\n    initial_back_steps = 5 # 5 steps back\n    initial_forward_steps = 10 # 10 steps forward\n    current_position_after_first_moves = initial_forward_steps - initial_back_steps\n\n    # L2\n    second_back_steps = 2 # 2 steps back\n    current_position_after_second_back = current_position_after_first_moves - second_back_steps\n\n    # L3\n    double_factor = 2 # double that amount\n    third_forward_steps = double_factor * second_back_steps\n\n    # L4\n    final_position = current_position_after_second_back + third_forward_steps\n\n    # FA\n    answer = final_position\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [],
      "line_number": "L1",
      "output_variable": "current_position_after_first_moves",
      "question_inputs": ["initial_back_steps", "initial_forward_steps"],
      "solution_line_template": "Frank stars by taking {initial_forward_steps} steps forward from a position {initial_back_steps} steps behind where he started, so he's {initial_forward_steps}-{initial_back_steps}= <<{initial_forward_steps}-{initial_back_steps}={current_position_after_first_moves}>>{current_position_after_first_moves} steps forward in total"
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "current_position_after_second_back",
      "question_inputs": ["second_back_steps"],
      "solution_line_template": "Frank then takes {second_back_steps} steps back, meaning he's now {current_position_after_first_moves}-{second_back_steps}=<<{current_position_after_first_moves}-{second_back_steps}={current_position_after_second_back}>>{current_position_after_second_back} steps forward in total from where he began"
    },
    {
      "WK_inputs": [],
      "line_number": "L3",
      "output_variable": "third_forward_steps",
      "question_inputs": ["double_factor"],
      "solution_line_template": "He then takes double the previous amount of {second_back_steps} steps forward, so he takes {double_factor}*{second_back_steps}= <<{double_factor}*{second_back_steps}={third_forward_steps}>>{third_forward_steps} steps forward"
    },
    {
      "WK_inputs": [],
      "line_number": "L4",
      "output_variable": "final_position",
      "question_inputs": [],
      "solution_line_template": "Since Frank was {current_position_after_second_back} steps forward before that, that means Frank finishes {current_position_after_second_back}+{third_forward_steps}=<<{current_position_after_second_back}+{third_forward_steps}={final_position}>>{final_position} steps forward"
    }
  ]
}