{
  "function_code": "def solve():\n    \"\"\"Index: 5101.\n    Returns: the total number of planks of wood Johnny needs.\n    \"\"\"\n    # L1\n    planks_per_leg = 1 # a plank of wood for each of the legs\n    num_legs_per_table = 4 # 4 legs\n    planks_for_legs_per_table = planks_per_leg * num_legs_per_table\n\n    # L2\n    planks_for_surface_per_table = 5 # 5 planks of wood for the surface\n    total_planks_per_table = planks_for_legs_per_table + planks_for_surface_per_table\n\n    # L3\n    num_tables = 5 # build 5 tables\n    total_planks_needed = total_planks_per_table * num_tables\n\n    # FA\n    answer = total_planks_needed\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [],
      "line_number": "L1",
      "output_variable": "planks_for_legs_per_table",
      "question_inputs": ["planks_per_leg", "num_legs_per_table"],
      "solution_line_template": "Each table needs {planks_per_leg} plank of wood * {num_legs_per_table} legs = <<{planks_per_leg}*{num_legs_per_table}={planks_for_legs_per_table}>>{planks_for_legs_per_table} planks of wood for the legs."
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "total_planks_per_table",
      "question_inputs": ["planks_for_surface_per_table"],
      "solution_line_template": "This means each table needs {planks_for_legs_per_table} planks of wood for legs + {planks_for_surface_per_table} planks of wood for the surface = <<{planks_for_legs_per_table}+{planks_for_surface_per_table}={total_planks_per_table}>>{total_planks_per_table} planks of wood."
    },
    {
      "WK_inputs": [],
      "line_number": "L3",
      "output_variable": "total_planks_needed",
      "question_inputs": ["num_tables"],
      "solution_line_template": "To build {num_tables} tables, Johnny will therefore need {total_planks_per_table} planks of wood * {num_tables} tables = <<{total_planks_per_table}*{num_tables}={total_planks_needed}>>{total_planks_needed} planks of wood."
    }
  ]
}