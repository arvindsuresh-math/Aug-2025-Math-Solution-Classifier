```json
{
  "function_code": "def solve():\n    \"\"\"Index: 2963.\n    Returns: Tully's age a year ago.\n    \"\"\"\n    # L1\n    kate_current_age = 29 # Kate is now 29 years old\n    years_from_now = 3 # Three years from now\n    kate_future_age = kate_current_age + years_from_now\n\n    # L2\n    tully_age_multiplier = 2 # twice as old\n    tully_future_age = kate_future_age * tully_age_multiplier\n\n    # L3\n    tully_current_age = tully_future_age - years_from_now\n\n    # L4\n    years_ago = 1 # a year ago\n    tully_age_last_year = tully_current_age - years_ago\n\n    # FA\n    answer = tully_age_last_year\n    return answer",
  "logical_steps": [
    {
      "line_number": "L1",
      "question_inputs": ["kate_current_age", "years_from_now"],
      "WK_inputs": [],
      "output_variable": "kate_future_age",
      "solution_line_template": "Three years from now, Kate will be {kate_current_age} years + {years_from_now} years = <<{kate_current_age}+{years_from_now}={kate_future_age}>>{kate_future_age} years old."
    },
    {
      "line_number": "L2",
      "question_inputs": ["tully_age_multiplier"],
      "WK_inputs": [],
      "output_variable": "tully_future_age",
      "solution_line_template": "So by that time, Tully will be {kate_future_age} years x {tully_age_multiplier} = <<{kate_future_age}*{tully_age_multiplier}={tully_future_age}>>{tully_future_age} years old."
    },
    {
      "line_number": "L3",
      "question_inputs": [],
      "WK_inputs": [],
      "output_variable": "tully_current_age",
      "solution_line_template": "This means, Tully is {tully_future_age} years - {years_from_now} years = <<{tully_future_age}-{years_from_now}={tully_current_age}>>{tully_current_age} years old now."
    },
    {
      "line_number": "L4",
      "question_inputs": ["years_ago"],
      "WK_inputs": [],
      "output_variable": "tully_age_last_year",
      "solution_line_template": "Therefore, Tully was {tully_current_age} years - {years_ago} year = {tully_age_last_year} years old last year."
    }
  ]
}
```