[
  {
    "WK_inputs": [],
    "line_number": "L1",
    "output_variable": "reward_b_plus_doubled",
    "question_inputs": [
      "reward_b_plus_initial",
      "doubling_factor"
    ],
    "solution_line_template": "We know Paul would get ${reward_b_plus_initial} for a B+. However, we know this could be ({doubling_factor}x) doubled if he obtains at least two A+. This means {doubling_factor}*${reward_b_plus_initial} = $<<{doubling_factor}*{reward_b_plus_initial}={reward_b_plus_doubled}>>{reward_b_plus_doubled} for a B+ if Paul gets at least two A+"
  },
  {
    "WK_inputs": [],
    "line_number": "L2",
    "output_variable": "reward_a_initial",
    "question_inputs": [
      "twice_factor"
    ],
    "solution_line_template": "We know Paul would get twice the reward of a B+ if he gets an A. This means {twice_factor}*${reward_b_plus_initial} = $<<{reward_b_plus_initial}*{twice_factor}={reward_a_initial}>>{reward_a_initial} for every A"
  },
  {
    "WK_inputs": [],
    "line_number": "L3",
    "output_variable": "reward_a_doubled",
    "question_inputs": [],
    "solution_line_template": "However, we know his reward for every A could be ({doubling_factor}x) doubled if he obtains at least two A+. This means {doubling_factor}*${reward_a_initial} = $<<{doubling_factor}*{reward_a_initial}={reward_a_doubled}>>{reward_a_doubled} for every A if Paul gets at least two A+"
  },
  {
    "WK_inputs": [],
    "line_number": "L5",
    "output_variable": "remaining_courses_for_a",
    "question_inputs": [
      "num_a_plus_for_bonus",
      "total_courses",
      "reward_a_plus_flat"
    ],
    "solution_line_template": "To maximize his payout, Paul will need to get only ({num_a_plus_for_bonus}) two A+ from his {total_courses} courses. Therefore he should aim to get an A in the remaining {total_courses}-{num_a_plus_for_bonus} = <<{total_courses}-{num_a_plus_for_bonus}={remaining_courses_for_a}>>{remaining_courses_for_a} courses"
  },
  {
    "WK_inputs": [],
    "line_number": "L7",
    "output_variable": "total_payout",
    "question_inputs": [],
    "solution_line_template": "This translates into ${payout_a_plus_part} + ${payout_a_part} or $<<{payout_a_plus_part}+{payout_a_part}={total_payout}>>{total_payout}"
  }
]