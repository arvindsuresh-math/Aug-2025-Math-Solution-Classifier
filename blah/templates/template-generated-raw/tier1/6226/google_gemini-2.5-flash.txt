{
  "function_code": "def solve():\n    \"\"\"Index: 6226.\n    Returns: the total number of eggs Theo needs to make all the omelettes.\n    \"\"\"\n    # L1\n    customers_first_hour_3_egg = 5 # 5 customers order the 3 egg omelettes\n    customers_third_hour_3_egg = 3 # 3 customers order the 3 egg omelettes\n    total_customers_3_egg_omelettes = customers_first_hour_3_egg + customers_third_hour_3_egg\n\n    # L2\n    customers_second_hour_4_egg = 7 # 7 customers order the 4 egg omelettes\n    customers_last_hour_4_egg = 8 # 8 customers order the 4 egg omelettes\n    total_customers_4_egg_omelettes = customers_second_hour_4_egg + customers_last_hour_4_egg\n\n    # L3\n    eggs_per_3_egg_omelette = 3 # 3 egg omelettes\n    eggs_for_3_egg_omelettes = eggs_per_3_egg_omelette * total_customers_3_egg_omelettes\n\n    # L4\n    eggs_per_4_egg_omelette = 4 # 4 egg omelettes\n    eggs_for_4_egg_omelettes = total_customers_4_egg_omelettes * eggs_per_4_egg_omelette\n\n    # L5\n    total_eggs_needed = eggs_for_3_egg_omelettes + eggs_for_4_egg_omelettes\n\n    # FA\n    answer = total_eggs_needed\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [],
      "line_number": "L1",
      "output_variable": "total_customers_3_egg_omelettes",
      "question_inputs": [
        "customers_first_hour_3_egg",
        "customers_third_hour_3_egg"
      ],
      "solution_line_template": "In the first and third hour, {customers_first_hour_3_egg} + {customers_third_hour_3_egg} = <<{customers_first_hour_3_egg}+{customers_third_hour_3_egg}={total_customers_3_egg_omelettes}>>{total_customers_3_egg_omelettes} customers order the 3 egg omelettes."
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "total_customers_4_egg_omelettes",
      "question_inputs": [
        "customers_second_hour_4_egg",
        "customers_last_hour_4_egg"
      ],
      "solution_line_template": "In the second and last hour, {customers_second_hour_4_egg} + {customers_last_hour_4_egg} = <<{customers_second_hour_4_egg}+{customers_last_hour_4_egg}={total_customers_4_egg_omelettes}>>{total_customers_4_egg_omelettes} customers order the 4 egg omelettes."
    },
    {
      "WK_inputs": [],
      "line_number": "L3",
      "output_variable": "eggs_for_3_egg_omelettes",
      "question_inputs": [
        "eggs_per_3_egg_omelette"
      ],
      "solution_line_template": "To make the 3 egg omelettes, Theo needs {eggs_per_3_egg_omelette} x {total_customers_3_egg_omelettes} = <<{eggs_per_3_egg_omelette}*{total_customers_3_egg_omelettes}={eggs_for_3_egg_omelettes}>>{eggs_for_3_egg_omelettes} eggs."
    },
    {
      "WK_inputs": [],
      "line_number": "L4",
      "output_variable": "eggs_for_4_egg_omelettes",
      "question_inputs": [
        "eggs_per_4_egg_omelette"
      ],
      "solution_line_template": "To make the 4 egg omelettes, Theo needs {total_customers_4_egg_omelettes} x {eggs_per_4_egg_omelette} = <<{total_customers_4_egg_omelettes}*{eggs_per_4_egg_omelette}={eggs_for_4_egg_omelettes}>>{eggs_for_4_egg_omelettes} eggs."
    },
    {
      "WK_inputs": [],
      "line_number": "L5",
      "output_variable": "total_eggs_needed",
      "question_inputs": [],
      "solution_line_template": "To make all the omelettes, he needs {eggs_for_3_egg_omelettes} + {eggs_for_4_egg_omelettes} = <<{eggs_for_3_egg_omelettes}+{eggs_for_4_egg_omelettes}={total_eggs_needed}>>{total_eggs_needed} eggs."
    }
  ]
}