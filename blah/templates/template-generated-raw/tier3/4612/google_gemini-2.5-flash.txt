{
  "function_code": "def solve():\n    \"\"\"Index: 4612.\n    Returns: the number of eggs Samantha will have left after recovering her capital.\n    \"\"\"\n    # L1\n    dollars_capital = 5 # $5\n    cents_per_dollar = 100 # 100 cents in each $1\n    total_cents_capital = dollars_capital * cents_per_dollar\n\n    # L2\n    selling_price_per_egg_cents = 20 # 20 cents\n    eggs_to_sell_to_recover_capital = total_cents_capital / selling_price_per_egg_cents\n\n    # L3\n    initial_eggs = 30 # 30 eggs\n    eggs_left = initial_eggs - eggs_to_sell_to_recover_capital\n\n    # FA\n    answer = eggs_left\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [
        "cents_per_dollar"
      ],
      "line_number": "L1",
      "output_variable": "total_cents_capital",
      "question_inputs": [
        "dollars_capital"
      ],
      "solution_line_template": "There are {cents_per_dollar} cents in each $1 so ${dollars_capital} gives {dollars_capital}*{cents_per_dollar} cents = <<{dollars_capital}*{cents_per_dollar}={total_cents_capital}>>{total_cents_capital} cents"
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "eggs_to_sell_to_recover_capital",
      "question_inputs": [
        "selling_price_per_egg_cents"
      ],
      "solution_line_template": "To recover her capital of {total_cents_capital} cents from a selling price of {selling_price_per_egg_cents} cents per egg she has to sell {total_cents_capital}/{selling_price_per_egg_cents} = <<{total_cents_capital}/{selling_price_per_egg_cents}={eggs_to_sell_to_recover_capital}>>{eggs_to_sell_to_recover_capital} eggs"
    },
    {
      "WK_inputs": [],
      "line_number": "L3",
      "output_variable": "eggs_left",
      "question_inputs": [
        "initial_eggs"
      ],
      "solution_line_template": "There were {initial_eggs} eggs in the crate to start with so she will have {initial_eggs}-{eggs_to_sell_to_recover_capital} = <<{initial_eggs}-{eggs_to_sell_to_recover_capital}={eggs_left}>>{eggs_left} eggs left"
    }
  ]
}