{
  "function_code": "from fractions import Fraction\n\ndef solve():\n    \"\"\"Index: 6630.\n    Returns: the amount of money that goes to the contingency fund.\n    \"\"\"\n    # L1\n    total_donation = 240 # $240 to a private organization\n    community_pantry_fraction = Fraction(1, 3) # 1/3 of it goes to the community pantry project\n    community_pantry_amount = total_donation * community_pantry_fraction\n\n    # L2\n    local_crisis_fraction = Fraction(1, 2) # 1/2 goes to the local crisis fund\n    local_crisis_amount = total_donation * local_crisis_fraction\n\n    # L3\n    allocated_for_two_funds = community_pantry_amount + local_crisis_amount\n\n    # L4\n    remaining_funds_for_other_two = total_donation - allocated_for_two_funds\n\n    # L5\n    livelihood_fraction = Fraction(1, 4) # 1/4 of the remaining goes to livelihood project funds\n    livelihood_project_amount = remaining_funds_for_other_two * livelihood_fraction\n\n    # L6\n    contingency_fund_amount = remaining_funds_for_other_two - livelihood_project_amount\n\n    # FA\n    answer = contingency_fund_amount\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [],
      "line_number": "L1",
      "output_variable": "community_pantry_amount",
      "question_inputs": [
        "total_donation",
        "community_pantry_fraction"
      ],
      "solution_line_template": "The community pantry project gets {total_donation} x {community_pantry_fraction} = $<<{total_donation}*{community_pantry_fraction}={community_pantry_amount}>>{community_pantry_amount}."
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "local_crisis_amount",
      "question_inputs": [
        "local_crisis_fraction"
      ],
      "solution_line_template": "The local crisis fund has {total_donation} x {local_crisis_fraction} = $<<{total_donation}*{local_crisis_fraction}={local_crisis_amount}>>{local_crisis_amount}."
    },
    {
      "WK_inputs": [],
      "line_number": "L3",
      "output_variable": "allocated_for_two_funds",
      "question_inputs": [],
      "solution_line_template": "The total funds allocated for the two funds is ${community_pantry_amount} + ${local_crisis_amount} = $<<{community_pantry_amount}+{local_crisis_amount}={allocated_for_two_funds}>>{allocated_for_two_funds}."
    },
    {
      "WK_inputs": [],
      "line_number": "L4",
      "output_variable": "remaining_funds_for_other_two",
      "question_inputs": [],
      "solution_line_template": "So, ${total_donation} - ${allocated_for_two_funds} = $<<{total_donation}-{allocated_for_two_funds}={remaining_funds_for_other_two}>>{remaining_funds_for_other_two} are left for the other 2 funds."
    },
    {
      "WK_inputs": [],
      "line_number": "L5",
      "output_variable": "livelihood_project_amount",
      "question_inputs": [
        "livelihood_fraction"
      ],
      "solution_line_template": "The livelihood project gets ${remaining_funds_for_other_two} x {livelihood_fraction} = $<<{remaining_funds_for_other_two}*{livelihood_fraction}={livelihood_project_amount}>>{livelihood_project_amount}."
    },
    {
      "WK_inputs": [],
      "line_number": "L6",
      "output_variable": "contingency_fund_amount",
      "question_inputs": [],
      "solution_line_template": "This means that the contingency fund is ${remaining_funds_for_other_two} - ${livelihood_project_amount} = $<<{remaining_funds_for_other_two}-{livelihood_project_amount}={contingency_fund_amount}>>{contingency_fund_amount}."
    }
  ]
}