{
  "function_code": "def solve():\n    \"\"\"Index: 3315.\n    Returns: the total number of doors the factory will produce.\n    \"\"\"\n    # L1\n    initial_production = 200 # planning to produce 200 cars\n    shortage_reduction = 50 # decreased the production by 50 cars\n    cars_after_shortage = initial_production - shortage_reduction\n\n    # L2\n    pandemic_reduction_divisor = 2 # cut production by another 50%\n    cars_after_pandemic = cars_after_shortage / pandemic_reduction_divisor\n\n    # L3\n    doors_per_car = 5 # cars with 5 doors\n    total_doors = cars_after_pandemic * doors_per_car\n\n    # FA\n    answer = total_doors\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [],
      "line_number": "L1",
      "output_variable": "cars_after_shortage",
      "question_inputs": [
        "initial_production",
        "shortage_reduction"
      ],
      "solution_line_template": "The factory due to shortages will produce {initial_production} - {shortage_reduction} = <<{initial_production}-{shortage_reduction}={cars_after_shortage}>>{cars_after_shortage} cars."
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "cars_after_pandemic",
      "question_inputs": [
        "pandemic_reduction_divisor"
      ],
      "solution_line_template": "Due to the pandemic, they will now produce {cars_after_shortage} / {pandemic_reduction_divisor} = <<{cars_after_shortage}/{pandemic_reduction_divisor}={cars_after_pandemic}>>{cars_after_pandemic} cars."
    },
    {
      "WK_inputs": [],
      "line_number": "L3",
      "output_variable": "total_doors",
      "question_inputs": [
        "doors_per_car"
      ],
      "solution_line_template": "The company will have to manufacture {cars_after_pandemic} * {doors_per_car} = <<{cars_after_pandemic}*{doors_per_car}={total_doors}>>{total_doors} doors."
    }
  ]
}