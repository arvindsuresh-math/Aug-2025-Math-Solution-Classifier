{
  "function_code": "from fractions import Fraction\n\ndef solve():\n    \"\"\"Index: 6298.\n    Returns: the number of days Marc needs to finish all episodes.\n    \"\"\"\n    # L1\n    total_episodes = 50 # 50 episodes of the show\n    fraction_watched_per_day = Fraction(1, 10) # 1/10 of the episodes he bought\n    episodes_per_day = total_episodes * fraction_watched_per_day\n\n    # L2\n    days_to_finish = total_episodes / episodes_per_day\n\n    # FA\n    answer = days_to_finish\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [],
      "line_number": "L1",
      "output_variable": "episodes_per_day",
      "question_inputs": [
        "total_episodes",
        "fraction_watched_per_day"
      ],
      "solution_line_template": "Marc watches {total_episodes} * {fraction_watched_per_day} = <<{total_episodes}*{fraction_watched_per_day}={episodes_per_day}>>{episodes_per_day} episodes a day."
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "days_to_finish",
      "question_inputs": [],
      "solution_line_template": "So, he will need {total_episodes} / {episodes_per_day} = <<{total_episodes}/{episodes_per_day}={days_to_finish}>>{days_to_finish} days to finish all episodes he bought."
    }
  ]
}