{
  "function_code": "def solve():\n    \"\"\"Index: 3532.\n    Returns: the number of people Donna can feed.\n    \"\"\"\n    # L1\n    initial_sandwiches = 20 # makes 20 sandwiches\n    first_cut_multiplier = 2 # cuts them in half\n    portions_after_first_halving = initial_sandwiches * first_cut_multiplier\n\n    # L2\n    second_cut_multiplier = 2 # cutting them in half again\n    total_portions = portions_after_first_halving * second_cut_multiplier\n\n    # L3\n    portions_per_person = 8 # gives everyone 8 portions\n    num_people_fed = total_portions / portions_per_person\n\n    # FA\n    answer = num_people_fed\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [],
      "line_number": "L1",
      "output_variable": "portions_after_first_halving",
      "question_inputs": [
        "initial_sandwiches",
        "first_cut_multiplier"
      ],
      "solution_line_template": "First, we need to determine the overall number of portions. To do this, we begin by performing {initial_sandwiches}*{first_cut_multiplier}= <<{initial_sandwiches}*{first_cut_multiplier}={portions_after_first_halving}>>{portions_after_first_halving} portions after the first halving."
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "total_portions",
      "question_inputs": [
        "second_cut_multiplier"
      ],
      "solution_line_template": "Next, we take this portion number and double it again, performing {portions_after_first_halving}*{second_cut_multiplier}=<<{portions_after_first_halving}*{second_cut_multiplier}={total_portions}>>{total_portions} portions after the second halving."
    },
    {
      "WK_inputs": [],
      "line_number": "L3",
      "output_variable": "num_people_fed",
      "question_inputs": [
        "portions_per_person"
      ],
      "solution_line_template": "Lastly, we divide this portion number by the number of portions each person will be served, performing {total_portions}/{portions_per_person}=<<{total_portions}/{portions_per_person}={num_people_fed}>>{num_people_fed} people served."
    }
  ]
}