{
  "function_code": "from fractions import Fraction\n\ndef solve():\n    \"\"\"Index: 6017.\n    Returns: the total distance Stephen covered.\n    \"\"\"\n    # L1\n    fraction_numerator = 3 # 3/4 of the mountain's height\n    fraction_denominator = 4 # 3/4 of the mountain's height\n    mountain_height = 40000 # 40,000 foot tall mountain\n    distance_up_one_trip = Fraction(fraction_numerator, fraction_denominator) * mountain_height\n\n    # L2\n    distance_one_round_trip = distance_up_one_trip + distance_up_one_trip\n\n    # L3\n    num_round_trips = 10 # 10 round trips\n    total_distance_covered = num_round_trips * distance_one_round_trip\n\n    # FA\n    answer = total_distance_covered\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": [],
      "line_number": "L1",
      "output_variable": "distance_up_one_trip",
      "question_inputs": [
        "fraction_numerator",
        "fraction_denominator",
        "mountain_height"
      ],
      "solution_line_template": "Up a mountain, Stephen covered {fraction_numerator}/{fraction_denominator}*{mountain_height} = <<{fraction_numerator}/{fraction_denominator}*{mountain_height}={distance_up_one_trip}>>{distance_up_one_trip} feet."
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "distance_one_round_trip",
      "question_inputs": [],
      "solution_line_template": "Coming down, Stephen covered another {distance_up_one_trip} feet, making the total distance covered in one round to be {distance_up_one_trip}+{distance_up_one_trip} = <<{distance_up_one_trip}+{distance_up_one_trip}={distance_one_round_trip}>>{distance_one_round_trip}."
    },
    {
      "WK_inputs": [],
      "line_number": "L3",
      "output_variable": "total_distance_covered",
      "question_inputs": [
        "num_round_trips"
      ],
      "solution_line_template": "Since Stephen made {num_round_trips} round trips up and down the mountain, he covered {num_round_trips}*{distance_one_round_trip} = <<{num_round_trips}*{distance_one_round_trip}={total_distance_covered}>>{total_distance_covered}"
    }
  ]
}