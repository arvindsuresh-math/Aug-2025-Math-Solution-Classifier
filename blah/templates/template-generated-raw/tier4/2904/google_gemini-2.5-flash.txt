{
  "function_code": "def solve():\n    \"\"\"Index: 2904.\n    Returns: the number of hours the mechanic worked.\n    \"\"\"\n    # L1\n    labor_cost_per_minute = 0.5 # labor cost .5 dollars a minute\n    minutes_per_hour = 60 # WK\n    labor_cost_per_hour = labor_cost_per_minute * minutes_per_hour\n\n    # L2\n    cost_per_part = 20 # two parts that cost 20 dollars each\n    num_parts = 2 # two parts\n    total_parts_cost = cost_per_part * num_parts\n\n    # L3\n    total_spent = 220 # Mark spent 220 dollars\n    total_labor_cost = total_spent - total_parts_cost\n\n    # L4\n    hours_worked = total_labor_cost / labor_cost_per_hour\n\n    # FA\n    answer = hours_worked\n    return answer",
  "logical_steps": [
    {
      "WK_inputs": ["minutes_per_hour"],
      "line_number": "L1",
      "output_variable": "labor_cost_per_hour",
      "question_inputs": ["labor_cost_per_minute"],
      "solution_line_template": "Labor cost is {labor_cost_per_minute}*{minutes_per_hour}=<<{labor_cost_per_minute}*{minutes_per_hour}={labor_cost_per_hour}>>{labor_cost_per_hour} dollars per hour"
    },
    {
      "WK_inputs": [],
      "line_number": "L2",
      "output_variable": "total_parts_cost",
      "question_inputs": ["cost_per_part", "num_parts"],
      "solution_line_template": "The cost for parts is {cost_per_part}*{num_parts}=$<<{cost_per_part}*{num_parts}={total_parts_cost}>>{total_parts_cost}"
    },
    {
      "WK_inputs": [],
      "line_number": "L3",
      "output_variable": "total_labor_cost",
      "question_inputs": ["total_spent"],
      "solution_line_template": "The total cost for labor is {total_spent}-{total_parts_cost}=$<<{total_spent}-{total_parts_cost}={total_labor_cost}>>{total_labor_cost}"
    },
    {
      "WK_inputs": [],
      "line_number": "L4",
      "output_variable": "hours_worked",
      "question_inputs": [],
      "solution_line_template": "He spent {total_labor_cost}/{labor_cost_per_hour}=<<{total_labor_cost}/{labor_cost_per_hour}={hours_worked}>>{hours_worked} hours on labor."
    }
  ]
}